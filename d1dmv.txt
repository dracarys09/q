diff --git a/.coafile b/.coafile
new file mode 100644
index 0000000..2142741
--- /dev/null
+++ b/.coafile
@@ -0,0 +1,14 @@
+# Generated by coala-quickstart on 23 Jan 2017.
+[default]
+bears = FilenameBear, coalaBear, InvalidLinkBear
+files = **.yml, **.py, **.markdown
+ignore = 
+[yaml]
+bears = LineLengthBear, YAMLLintBear
+files = **.yml
+[python]
+bears = PycodestyleBear
+files = **.py
+[markdown]
+bears = LineLengthBear, MarkdownBear
+files = **.markdown
diff --git a/coala-ci.log b/coala-ci.log
new file mode 100644
index 0000000..37c28fc
--- /dev/null
+++ b/coala-ci.log
@@ -0,0 +1,4116 @@
+Executing section Default...
+
+.travis.yml
+|  12| ••#•Create•two•diff•files,•and•upload•to•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  17| ••-•cat•sans-whitespace.diff•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  19| ••-•cat•with-whitespace.diff•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  20| ••#•Upload•logs•to•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  21| ••-•cat•coala-ci.log•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+README.markdown
+|   6| q's•web•site•is•[http://harelba.github.io/q/](http://harelba.github.io/q/).•It•contains•everything•you•need•to•download•and•use•q•in•no•time.
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to http://harelba.github.io/q/](http://harelba.github.io/q/) (HTTP Error: 404)
+Executing section yaml...
+Executing section python...
+
+bin/__init__.py
+|   2| 
+|    | [NORMAL] PycodestyleBear (W391):
+|    | W391 blank line at end of file'
+
+bin/qtextasdata.py
+|  18| #•Author••••:•Harel•Ben•Attia•-•harelba@gmail.com,•harelba•@•github,•@harelba•on•twitter
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+bin/qtextasdata.py
+|  24| #•Its•purpose•is•to•bring•SQL•expressive•power•to•manipulating•text•data•using•the•Linux•command•line.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+bin/qtextasdata.py
+|  26| #•Full•Documentation•and•details•in•http://harelba.github.io/q/•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|  30| q_version•=•"1.6.0notreleasedyet"•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|  32| __all__•=•[•'QTextAsData'•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+bin/qtextasdata.py
+|  32| __all__•=•[•'QTextAsData'•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+bin/qtextasdata.py
+|  34| import•os
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  35| import•sys
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  36| import•sqlite3
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  37| import•gzip
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  38| import•glob
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  39| from•optparse•import•OptionParser,OptionGroup
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  39| from•optparse•import•OptionParser,OptionGroup
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|  40| import•traceback•as•tb
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  41| import•codecs
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  42| import•locale
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  43| import•time
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  44| import•re
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  45| from•ConfigParser•import•ConfigParser
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  46| import•traceback
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  47| import•csv
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  48| import•hashlib
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  49| import•uuid
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  50| import•cStringIO
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  51| import•math
+|    | [NORMAL] PycodestyleBear (E402):
+|    | E402 module level import not at top of file'
+
+bin/qtextasdata.py
+|  57| def•get_stdout_encoding(encoding_override=None):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|  59| •••••••return•encoding_override
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+bin/qtextasdata.py
+|  66| SHOW_SQL•=•False
+|    | [NORMAL] PycodestyleBear (E305):
+|    | E305 expected 2 blank lines after class or function definition, found 1'
+
+bin/qtextasdata.py
+|  68| def•sha1(data):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|  69| ••••if•not•isinstance(data,str)•and•not•isinstance(data,unicode):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|  69| ••••if•not•isinstance(data,str)•and•not•isinstance(data,unicode):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|  72| ••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+bin/qtextasdata.py
+|  73| def•regexp(regular_expression,•data):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|  81| class•Sqlite3DBResults(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|  82| ••••def•__init__(self,query_column_names,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|  82| ••••def•__init__(self,query_column_names,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|  86| def•percentile(l,•p):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|  87| ••••#•TODO•Alpha•implementation,•need•to•provide•multiple•interpolation•methods,•and•add•tests
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+bin/qtextasdata.py
+|  97| class•StrictPercentile(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 101| ••••def•step(self,value,p):
+|    | [NORMAL] PycodestyleBear (E301):
+|    | E301 expected 1 blank line, found 0'
+
+bin/qtextasdata.py
+| 101| ••••def•step(self,value,p):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 101| ••••def•step(self,value,p):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 103| ••••••••••self.p•=•p
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+bin/qtextasdata.py
+| 108| ••••••••••••return•None•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+| 110| ••••••••••••return•percentile(sorted(self.values),self.p)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 112| class•Sqlite3DB(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 120| ••••••••••••str:•'TEXT',•int:•'INT',•long•:•'INT'•,•float:•'FLOAT',•None:•'TEXT'}
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+| 120| ••••••••••••str:•'TEXT',•int:•'INT',•long•:•'INT'•,•float:•'FLOAT',•None:•'TEXT'}
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ',''
+
+bin/qtextasdata.py
+| 120| ••••••••••••str:•'TEXT',•int:•'INT',•long•:•'INT'•,•float:•'FLOAT',•None:•'TEXT'}
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+| 127| ••••••••self.conn.create_aggregate("percentile",2,StrictPercentile)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 127| ••••••••self.conn.create_aggregate("percentile",2,StrictPercentile)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 146| ••••••••••••••••#•we•decode•the•column•names,•so•they•can•be•encoded•to•any•output•format•later•on
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (98 > 79 characters)'
+
+bin/qtextasdata.py
+| 147| ••••••••••••••••query_column_names•=•[c[0].decode('utf-8')•for•c•in•self.cursor.description]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+bin/qtextasdata.py
+| 153| ••••••••return•Sqlite3DBResults(query_column_names,result)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 177| ••••••••return•'INSERT•INTO•%s•(%s)•VALUES•(%s)'•%•(table_name,•col_names_str,•question_marks)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+bin/qtextasdata.py
+| 185| ••••#•Get•a•list•of•column•names•so•order•will•be•preserved•(Could•have•used•OrderedDict,•but
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+bin/qtextasdata.py
+| 192| ••••••••••••n.replace('"',•'""'),•column_name_to_db_type[n])•for•n•in•column_names])
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+bin/qtextasdata.py
+| 205| class•CouldNotConvertStringToNumericValueException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 213| class•CouldNotParseInputException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 221| class•BadHeaderException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 229| class•EncodedQueryException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 243| class•UnprovidedStdInException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 248| class•EmptyDataException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 253| class•MissingHeaderException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 255| ••••def•__init__(self,msg):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 276| class•StrictModeColumnCountMismatchException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 278| ••••def•__init__(self,expected_col_count,actual_col_count):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 278| ••••def•__init__(self,expected_col_count,actual_col_count):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 282| class•FluffyModeColumnCountMismatchException(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 284| ••••def•__init__(self,expected_col_count,actual_col_count):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 284| ••••def•__init__(self,expected_col_count,actual_col_count):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 289| #•Simplistic•Sql•"parsing"•class...•We'll•eventually•require•a•real•SQL•parser•which•will•provide•us•with•a•parse•tree
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (118 > 79 characters)'
+
+bin/qtextasdata.py
+| 306| ••••••••#•Dict•from•qtable•names•to•their•positions•in•sql_parts.•Value•here•is•a•*list*•of•positions,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+bin/qtextasdata.py
+| 307| ••••••••#•since•it•is•possible•that•the•same•qtable_name•(file)•is•referenced•in•multiple•positions
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (99 > 79 characters)'
+
+bin/qtextasdata.py
+| 331| ••••••••••••••••#•Otherwise,•the•next•part•contains•the•qtable•name.•In•most•cases•the•next•part•will•be•only•the•qtable•name.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (126 > 79 characters)'
+
+bin/qtextasdata.py
+| 332| ••••••••••••••••#•We•handle•one•special•case•here,•where•this•is•a•subquery•as•a•column:•"SELECT•(SELECT•...•FROM•qtable),100•FROM•...".
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (136 > 79 characters)'
+
+bin/qtextasdata.py
+| 333| ••••••••••••••••#•In•that•case,•there•will•be•an•ending•paranthesis•as•part•of•the•name,•and•we•want•to•handle•this•case•gracefully.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (132 > 79 characters)'
+
+bin/qtextasdata.py
+| 363| ••••••••if•len(filter(lambda•x:•x•is•None,•self.qtable_name_effective_table_names))•!=•0:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+bin/qtextasdata.py
+| 394| ••••••••return•self.split_regexp.split(line,•max_split=self.expected_column_count)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+| 399| ••••def•__init__(self,•mode,•expected_column_count,•input_delimiter,•skip_header=False,disable_column_type_detection=False):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (124 > 79 characters)'
+
+bin/qtextasdata.py
+| 399| ••••def•__init__(self,•mode,•expected_column_count,•input_delimiter,•skip_header=False,disable_column_type_detection=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 425| ••••••••#•This•method•is•called•whenever•there•is•no•more•data,•and•an•analysis•needs
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+bin/qtextasdata.py
+| 426| ••••••••#•to•be•performed•immediately,•regardless•of•the•amount•of•sample•data•that•has
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+bin/qtextasdata.py
+| 482| ••••••••••••print•>>sys.stderr,•"Warning:•column•count•is•one•-•did•you•provide•the•correct•delimiter?"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (103 > 79 characters)'
+
+bin/qtextasdata.py
+| 492| ••••••••••••••••#•we•allow•column•names•to•be•None,•in•relaxed•mode•it'll•be•filled•with•default•names.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (103 > 79 characters)'
+
+bin/qtextasdata.py
+| 501| ••••••••••••••••••••(v,•"Column•name•cannot•contain•the•input•delimiter.•Please•make•sure•you've•set•the•correct•delimiter"))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (125 > 79 characters)'
+
+bin/qtextasdata.py
+| 531| ••••••••••••••••raise•BadHeaderException("Header•must•contain•only•strings•and•not•numbers•or•empty•strings:•'%s'\n%s"•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (122 > 79 characters)'
+
+bin/qtextasdata.py
+| 532| ••••••••••••••••••••",".join(self.header_row),•"\n".join(["'%s':•%s"•%•(x,•y)•for•x,•y•in•column_name_errors])))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (112 > 79 characters)'
+
+bin/qtextasdata.py
+| 537| ••••••••••••••••••••raise•ColumnCountMismatchException("Strict•mode.•Header•row•contains•less•columns•than•expected•column•count(%s•vs•%s)"•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (143 > 79 characters)'
+
+bin/qtextasdata.py
+| 543| •••••••••••••••••••••••••for•x•in•xrange(self.column_count•-•len(self.header_row))]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (83 > 79 characters)'
+
+bin/qtextasdata.py
+| 546| ••••••••••••••••••••raise•ColumnCountMismatchException("Strict•mode.•Header•row•contains•more•columns•than•expected•column•count•(%s•vs•%s)"•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (144 > 79 characters)'
+
+bin/qtextasdata.py
+| 566| ••••••••••••••••#•If•not•specified,•we'll•take•the•largest•row•in•the•sample•rows
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+| 573| ••••••••return•",•".join(["%s•rows•with•%s•columns"•%•(v,•k)•for•k,•v•in•counts.iteritems()])
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+bin/qtextasdata.py
+| 579| ••••••••••••raise•ColumnCountMismatchException('Strict•mode.•Column•Count•is•expected•to•identical.•Multiple•column•counts•exist•at•the•first•part•of•the•file.•Try•to•check•your•delimiter,•or•change•to•relaxed•mode.•Details:•%s'•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (232 > 79 characters)'
+
+bin/qtextasdata.py
+| 584| ••••••••if•self.expected_column_count•is•not•None•and•self.column_count•!=•self.expected_column_count:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+bin/qtextasdata.py
+| 585| ••••••••••••raise•ColumnCountMismatchException('Strict•mode.•Column•count•is•expected•to•be•%s•but•is•%s'•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (109 > 79 characters)'
+
+bin/qtextasdata.py
+| 595| ••••••••••••••••row[column_number]•if•column_number•<•len(row)•else•None•for•row•in•self.rows]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+bin/qtextasdata.py
+| 609| ••••••••••••if•number_of_column_types•==•1•and•list(set(self.column_types))[0]•==•str:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+bin/qtextasdata.py
+| 610| ••••••••••••••••print•>>sys.stderr,•'Warning•-•There•seems•to•be•header•line•in•the•file,•but•-H•has•not•been•specified.•All•fields•will•be•detected•as•text•fields,•and•the•header•line•will•appear•as•part•of•the•data'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (217 > 79 characters)'
+
+bin/qtextasdata.py
+| 634| ••••except•ValueError,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 635| ••••••••if•e.message•is•not•None•and•e.message.startswith('could•not•convert•string•to'):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+bin/qtextasdata.py
+| 640| def•normalized_filename(filename):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 646| class•TableCreatorState(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 652| class•MaterializedFileState(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 653| ••••def•__init__(self,filename,f,encoding,dialect,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 653| ••••def•__init__(self,filename,f,encoding,dialect,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 653| ••••def•__init__(self,filename,f,encoding,dialect,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 653| ••••def•__init__(self,filename,f,encoding,dialect,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 653| ••••def•__init__(self,filename,f,encoding,dialect,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 663| ••••••••#•This•is•a•hack•for•utf-8•with•BOM•encoding•in•order•to•skip•the•BOM.•python's•csv•module
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (98 > 79 characters)'
+
+bin/qtextasdata.py
+| 664| ••••••••#•has•a•bug•which•prevents•fixing•it•using•the•proper•encoding,•and•it•has•been•encountered•by•
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+bin/qtextasdata.py
+| 664| ••••••••#•has•a•bug•which•prevents•fixing•it•using•the•proper•encoding,•and•it•has•been•encountered•by•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+| 666| ••••••••if•self.encoding•==•'utf-8-sig'•and•self.lines_read•==•0•and•not•self.skipped_bom:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+bin/qtextasdata.py
+| 670| ••••••••••••••••••••raise•Exception('Value•of•BOM•is•not•as•expected•-•Value•is•"%s"'•%•str(BOM))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (97 > 79 characters)'
+
+bin/qtextasdata.py
+| 671| ••••••••••••except•Exception,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 672| ••••••••••••••••raise•Exception('Tried•to•skip•BOM•for•"utf-8-sig"•encoding•and•failed.•Error•message•is•'•+•str(e))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (116 > 79 characters)'
+
+bin/qtextasdata.py
+| 673| ••••••••csv_reader•=•encoded_csv_reader(self.encoding,•self.f,•dialect=self.dialect)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+bin/qtextasdata.py
+| 682| class•TableCreator(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 684| ••••def•__init__(self,•db,•filenames_str,•line_splitter,•skip_header=False,•gzipped=False,•encoding='UTF-8',•mode='fluffy',•expected_column_count=None,•input_delimiter=None,disable_column_type_detection=False,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (209 > 79 characters)'
+
+bin/qtextasdata.py
+| 684| ••••def•__init__(self,•db,•filenames_str,•line_splitter,•skip_header=False,•gzipped=False,•encoding='UTF-8',•mode='fluffy',•expected_column_count=None,•input_delimiter=None,disable_column_type_detection=False,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 685| ••••••••stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E125):
+|    | E125 continuation line with same indent as next logical line'
+
+bin/qtextasdata.py
+| 685| ••••••••stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+| 685| ••••••••stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 700| ••••••••••••mode,•expected_column_count,•input_delimiter,•skip_header,disable_column_type_detection)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 700| ••••••••••••mode,•expected_column_count,•input_delimiter,•skip_header,disable_column_type_detection)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (100 > 79 characters)'
+
+bin/qtextasdata.py
+| 709| ••••••••#•Column•type•indices•for•columns•that•contain•numeric•types.•Lazily•initialized
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+bin/qtextasdata.py
+| 742| ••••def•open_file(self,filename):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 752| ••••••••••••••••f•=•gzip.GzipFile(fileobj=file(filename,'rb'))••••
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 752| ••••••••••••••••f•=•gzip.GzipFile(fileobj=file(filename,'rb'))••••
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+| 754| ••••••••••••••••f•=•file(filename,'rb')
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 757| ••••def•_pre_populate(self,dialect):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 767| ••••••••••••mfs•=•MaterializedFileState(filename,f,self.encoding,dialect,is_stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 767| ••••••••••••mfs•=•MaterializedFileState(filename,f,self.encoding,dialect,is_stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 767| ••••••••••••mfs•=•MaterializedFileState(filename,f,self.encoding,dialect,is_stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 767| ••••••••••••mfs•=•MaterializedFileState(filename,f,self.encoding,dialect,is_stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 767| ••••••••••••mfs•=•MaterializedFileState(filename,f,self.encoding,dialect,is_stdin)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+| 770| ••••def•_populate(self,dialect,stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 770| ••••def•_populate(self,dialect,stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 781| ••••••••••••••••••••••••if•stop_after_analysis•and•self.column_inferer.inferred:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+bin/qtextasdata.py
+| 784| ••••••••••••••••••••••••raise•MissingHeaderException("Header•line•is•expected•but•missing•in•file•%s"•%•filename)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (113 > 79 characters)'
+
+bin/qtextasdata.py
+| 786| ••••••••••••••••••••total_data_lines_read•+=•mfs.lines_read•-•(1•if•self.skip_header•else•0)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+bin/qtextasdata.py
+| 787| ••••••••••••••••except•StrictModeColumnCountMismatchException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 789| ••••••••••••••••••••••••'Strict•mode•-•Expected•%s•columns•instead•of•%s•columns•in•file•%s•row•%s.•Either•use•relaxed/fluffy•modes•or•check•your•delimiter'•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (160 > 79 characters)'
+
+bin/qtextasdata.py
+| 790| ••••••••••••••••••••••••e.expected_col_count,•e.actual_col_count,•normalized_filename(mfs.filename),•mfs.lines_read))
+|    | [NORMAL] PycodestyleBear (E122):
+|    | E122 continuation line missing indentation or outdented'
+
+bin/qtextasdata.py
+| 790| ••••••••••••••••••••••••e.expected_col_count,•e.actual_col_count,•normalized_filename(mfs.filename),•mfs.lines_read))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (117 > 79 characters)'
+
+bin/qtextasdata.py
+| 791| ••••••••••••••••except•FluffyModeColumnCountMismatchException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 793| ••••••••••••••••••••••••'Deprecated•fluffy•mode•-•Too•many•columns•in•file•%s•row•%s•(%s•fields•instead•of•%s•fields).•Consider•moving•to•either•relaxed•or•strict•mode'•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (172 > 79 characters)'
+
+bin/qtextasdata.py
+| 794| ••••••••••••••••••••••••normalized_filename(mfs.filename),•mfs.lines_read,•e.actual_col_count,•e.expected_col_count))
+|    | [NORMAL] PycodestyleBear (E122):
+|    | E122 continuation line missing indentation or outdented'
+
+bin/qtextasdata.py
+| 794| ••••••••••••••••••••••••normalized_filename(mfs.filename),•mfs.lines_read,•e.actual_col_count,•e.expected_col_count))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (117 > 79 characters)'
+
+bin/qtextasdata.py
+| 804| •••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+bin/qtextasdata.py
+| 805| ••••••••if•total_data_lines_read•==•0:
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (2)'
+
+bin/qtextasdata.py
+| 808| ••••def•populate(self,dialect,stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 808| ••••def•populate(self,dialect,stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 810| ••••••••••••self._pre_populate(dialect)••••
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+| 814| ••••••••••••self._populate(dialect,stop_after_analysis=True)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 821| ••••••••••••self._populate(dialect,stop_after_analysis=False)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 840| ••••••••#•If•the•table•is•still•not•created,•then•we•don't•have•enough•data,•just
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+| 853| ••••••••••••self.numeric_column_indices•=•[idx•for•idx,•column_type•in•enumerate(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+| 877| ••••••••••••••••raise•StrictModeColumnCountMismatchException(expected_col_count,actual_col_count)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 877| ••••••••••••••••raise•StrictModeColumnCountMismatchException(expected_col_count,actual_col_count)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (97 > 79 characters)'
+
+bin/qtextasdata.py
+| 890| ••••••••••••••••••••[self.input_delimiter.join([v•if•v••is•not•None•else•''•for•v•in•
+|    | [NORMAL] PycodestyleBear (E272):
+|    | E272 multiple spaces before keyword'
+
+bin/qtextasdata.py
+| 890| ••••••••••••••••••••[self.input_delimiter.join([v•if•v••is•not•None•else•''•for•v•in•
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+bin/qtextasdata.py
+| 890| ••••••••••••••••••••[self.input_delimiter.join([v•if•v••is•not•None•else•''•for•v•in•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+| 891| ••••••••••••••••••••••••col_vals[expected_col_count•-•1:]])]
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+| 898| ••••••••••••••••raise•FluffyModeColumnCountMismatchException(expected_col_count,actual_col_count)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 898| ••••••••••••••••raise•FluffyModeColumnCountMismatchException(expected_col_count,actual_col_count)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (97 > 79 characters)'
+
+bin/qtextasdata.py
+| 927| ••••••••••••params•=•[col_vals•for•col_names,•col_vals•in•self.buffered_inserts]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+bin/qtextasdata.py
+| 951| ••••••••#•Guard•against•empty•tables•(instead•of•preventing•the•creation,•just•create•with•a•dummy•column)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (106 > 79 characters)'
+
+bin/qtextasdata.py
+| 953| ••••••••••••column_dict•=•{•'dummy_column_for_empty_tables'•:•str•}•
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '{''
+
+bin/qtextasdata.py
+| 953| ••••••••••••column_dict•=•{•'dummy_column_for_empty_tables'•:•str•}•
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+| 953| ••••••••••••column_dict•=•{•'dummy_column_for_empty_tables'•:•str•}•
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before '}''
+
+bin/qtextasdata.py
+| 953| ••••••••••••column_dict•=•{•'dummy_column_for_empty_tables'•:•str•}•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+| 954| ••••••••••••ordered_column_names•=•[•'dummy_column_for_empty_tables'•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+bin/qtextasdata.py
+| 954| ••••••••••••ordered_column_names•=•[•'dummy_column_for_empty_tables'•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+bin/qtextasdata.py
+| 972| def•determine_max_col_lengths(m,output_field_quoting_func,output_delimiter):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 972| def•determine_max_col_lengths(m,output_field_quoting_func,output_delimiter):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 978| ••••••••••••new_len•=•len(unicode(output_field_quoting_func(output_delimiter,m[row_index][col_index])))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 978| ••••••••••••new_len•=•len(unicode(output_field_quoting_func(output_delimiter,m[row_index][col_index])))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (103 > 79 characters)'
+
+bin/qtextasdata.py
+| 983| def•print_credentials():
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 984| ••••print•>>sys.stderr,"q•version•%s"•%•q_version
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 985| ••••print•>>sys.stderr,"Copyright•(C)•2012-2014•Harel•Ben-Attia•(harelba@gmail.com,•@harelba•on•twitter)"
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 985| ••••print•>>sys.stderr,"Copyright•(C)•2012-2014•Harel•Ben-Attia•(harelba@gmail.com,•@harelba•on•twitter)"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (105 > 79 characters)'
+
+bin/qtextasdata.py
+| 986| ••••print•>>sys.stderr,"http://harelba.github.io/q/"
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 989| class•QWarning(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 990| ••••def•__init__(self,exception,msg):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 990| ••••def•__init__(self,exception,msg):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 994| class•QError(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+| 995| ••••def•__init__(self,exception,msg,errorcode):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 995| ••••def•__init__(self,exception,msg,errorcode):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+| 995| ••••def•__init__(self,exception,msg,errorcode):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1001| class•QDataLoad(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1002| ••••def•__init__(self,filename,start_time,end_time):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1002| ••••def•__init__(self,filename,start_time,end_time):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1002| ••••def•__init__(self,filename,start_time,end_time):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1011| ••••••••return•"DataLoad<'%s'•at•%s•(took•%4.3f•seconds)>"•%•(self.filename,self.start_time,self.duration())
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1011| ••••••••return•"DataLoad<'%s'•at•%s•(took•%4.3f•seconds)>"•%•(self.filename,self.start_time,self.duration())
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (108 > 79 characters)'
+
+bin/qtextasdata.py
+|1011| ••••••••return•"DataLoad<'%s'•at•%s•(took•%4.3f•seconds)>"•%•(self.filename,self.start_time,self.duration())
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1014| class•QMaterializedFile(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1015| ••••def•__init__(self,filename,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1015| ••••def•__init__(self,filename,is_stdin):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1020| ••••••••return•"QMaterializedFile<filename=%s,is_stdin=%s>"•%•(self.filename,self.is_stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1020| ••••••••return•"QMaterializedFile<filename=%s,is_stdin=%s>"•%•(self.filename,self.is_stdin)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+bin/qtextasdata.py
+|1023| class•QTableStructure(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1024| ••••def•__init__(self,filenames_str,materialized_files,column_names,column_types):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1024| ••••def•__init__(self,filenames_str,materialized_files,column_names,column_types):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1024| ••••def•__init__(self,filenames_str,materialized_files,column_names,column_types):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1024| ••••def•__init__(self,filenames_str,materialized_files,column_names,column_types):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1024| ••••def•__init__(self,filenames_str,materialized_files,column_names,column_types):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+|1031| ••••••••return•"QTableStructure<filenames_str=%s,materialized_file_count=%s,column_names=%s,column_types=%s>"•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (113 > 79 characters)'
+
+bin/qtextasdata.py
+|1032| ••••••••••••self.filenames_str,len(self.materialized_files.keys()),self.column_names,self.column_types)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1032| ••••••••••••self.filenames_str,len(self.materialized_files.keys()),self.column_names,self.column_types)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1032| ••••••••••••self.filenames_str,len(self.materialized_files.keys()),self.column_names,self.column_types)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (103 > 79 characters)'
+
+bin/qtextasdata.py
+|1032| ••••••••••••self.filenames_str,len(self.materialized_files.keys()),self.column_names,self.column_types)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1035| class•QMetadata(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1036| ••••def•__init__(self,table_structures=[],output_column_name_list=None,data_loads=[]):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1036| ••••def•__init__(self,table_structures=[],output_column_name_list=None,data_loads=[]):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1036| ••••def•__init__(self,table_structures=[],output_column_name_list=None,data_loads=[]):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1036| ••••def•__init__(self,table_structures=[],output_column_name_list=None,data_loads=[]):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+bin/qtextasdata.py
+|1042| ••••••••return•"QMetadata<table_count=%s,output_column_name_list=%s,data_load_count=%s"•%•(
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+bin/qtextasdata.py
+|1043| ••••••••••••len(self.table_structures),self.output_column_name_list,len(self.data_loads))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1043| ••••••••••••len(self.table_structures),self.output_column_name_list,len(self.data_loads))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1043| ••••••••••••len(self.table_structures),self.output_column_name_list,len(self.data_loads))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+bin/qtextasdata.py
+|1046| class•QOutput(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1047| ••••def•__init__(self,data=None,metadata=None,warnings=[],error=None):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1047| ••••def•__init__(self,data=None,metadata=None,warnings=[],error=None):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1047| ••••def•__init__(self,data=None,metadata=None,warnings=[],error=None):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1047| ••••def•__init__(self,data=None,metadata=None,warnings=[],error=None):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1076| class•QInputParams(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1077| ••••def•__init__(self,skip_header=False,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1078| ••••••••••••delimiter='•',input_encoding='UTF-8',gzipped_input=False,parsing_mode='relaxed',
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1078| ••••••••••••delimiter='•',input_encoding='UTF-8',gzipped_input=False,parsing_mode='relaxed',
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1078| ••••••••••••delimiter='•',input_encoding='UTF-8',gzipped_input=False,parsing_mode='relaxed',
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1078| ••••••••••••delimiter='•',input_encoding='UTF-8',gzipped_input=False,parsing_mode='relaxed',
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1078| ••••••••••••delimiter='•',input_encoding='UTF-8',gzipped_input=False,parsing_mode='relaxed',
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+bin/qtextasdata.py
+|1079| ••••••••••••expected_column_count=None,keep_leading_whitespace_in_values=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1079| ••••••••••••expected_column_count=None,keep_leading_whitespace_in_values=False,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1080| ••••••••••••disable_double_double_quoting=False,disable_escaped_double_quoting=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1080| ••••••••••••disable_double_double_quoting=False,disable_escaped_double_quoting=False,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1080| ••••••••••••disable_double_double_quoting=False,disable_escaped_double_quoting=False,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+bin/qtextasdata.py
+|1081| ••••••••••••disable_column_type_detection=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1082| ••••••••••••input_quoting_mode='minimal',stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1082| ••••••••••••input_quoting_mode='minimal',stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1082| ••••••••••••input_quoting_mode='minimal',stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1089| ••••••••self.keep_leading_whitespace_in_values•=•keep_leading_whitespace_in_values
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+|1095| ••••def•merged_with(self,input_params):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1107| class•QTextAsData(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1108| ••••def•__init__(self,default_input_params=QInputParams()):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1117| ••••input_quoting_modes•=•{•••'minimal'•:•csv.QUOTE_MINIMAL,
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (2)'
+
+bin/qtextasdata.py
+|1117| ••••input_quoting_modes•=•{•••'minimal'•:•csv.QUOTE_MINIMAL,
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '{''
+
+bin/qtextasdata.py
+|1117| ••••input_quoting_modes•=•{•••'minimal'•:•csv.QUOTE_MINIMAL,
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1118| ••••••••••••••••••••••••'all'•:•csv.QUOTE_ALL,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1118| ••••••••••••••••••••••••'all'•:•csv.QUOTE_ALL,
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1119| ••••••••••••••••••••••••#•nonnumeric•is•not•supported•for•input•quoting•modes,•since•we•determine•the•data•types•
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1119| ••••••••••••••••••••••••#•nonnumeric•is•not•supported•for•input•quoting•modes,•since•we•determine•the•data•types•
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (112 > 79 characters)'
+
+bin/qtextasdata.py
+|1119| ••••••••••••••••••••••••#•nonnumeric•is•not•supported•for•input•quoting•modes,•since•we•determine•the•data•types•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|1120| ••••••••••••••••••••••••#•ourselves•instead•of•letting•the•csv•module•try•to•identify•the•types
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1120| ••••••••••••••••••••••••#•ourselves•instead•of•letting•the•csv•module•try•to•identify•the•types
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (95 > 79 characters)'
+
+bin/qtextasdata.py
+|1121| ••••••••••••••••••••••••'none'•:•csv.QUOTE_NONE•}
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1121| ••••••••••••••••••••••••'none'•:•csv.QUOTE_NONE•}
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1121| ••••••••••••••••••••••••'none'•:•csv.QUOTE_NONE•}
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before '}''
+
+bin/qtextasdata.py
+|1123| ••••def•determine_proper_dialect(self,input_params):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1125| ••••••••input_quoting_mode_csv_numeral•=•QTextAsData.input_quoting_modes[input_params.input_quoting_mode]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (105 > 79 characters)'
+
+bin/qtextasdata.py
+|1133| ••••••••••••••••••••'delimiter':•input_params.delimiter,•'quotechar':•'"'•}
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+bin/qtextasdata.py
+|1133| ••••••••••••••••••••'delimiter':•input_params.delimiter,•'quotechar':•'"'•}
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before '}''
+
+bin/qtextasdata.py
+|1142| ••••def•get_dialect_id(self,filename):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1145| ••••def•_load_data(self,filename,input_params=QInputParams(),stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1145| ••••def•_load_data(self,filename,input_params=QInputParams(),stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1145| ••••def•_load_data(self,filename,input_params=QInputParams(),stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1145| ••••def•_load_data(self,filename,input_params=QInputParams(),stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1145| ••••def•_load_data(self,filename,input_params=QInputParams(),stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (123 > 79 characters)'
+
+bin/qtextasdata.py
+|1145| ••••def•_load_data(self,filename,input_params=QInputParams(),stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1153| ••••••••line_splitter•=•LineSplitter(input_params.delimiter,•input_params.expected_column_count)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+bin/qtextasdata.py
+|1155| ••••••••#•reuse•already•loaded•data,•except•for•stdin•file•data•(stdin•file•data•will•always
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+bin/qtextasdata.py
+|1157| ••••••••if•filename•in•self.table_creators.keys()•and•filename•!=•stdin_filename:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+|1162| ••••••••••••self.db,•filename,•line_splitter,•input_params.skip_header,•input_params.gzipped_input,•input_params.input_encoding,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (128 > 79 characters)'
+
+bin/qtextasdata.py
+|1163| ••••••••••••mode=input_params.parsing_mode,•expected_column_count=input_params.expected_column_count,•
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+bin/qtextasdata.py
+|1163| ••••••••••••mode=input_params.parsing_mode,•expected_column_count=input_params.expected_column_count,•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|1164| ••••••••••••input_delimiter=input_params.delimiter,disable_column_type_detection=input_params.disable_column_type_detection,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1164| ••••••••••••input_delimiter=input_params.delimiter,disable_column_type_detection=input_params.disable_column_type_detection,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (124 > 79 characters)'
+
+bin/qtextasdata.py
+|1165| ••••••••••••stdin_file•=•stdin_file,stdin_filename•=•stdin_filename)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1165| ••••••••••••stdin_file•=•stdin_file,stdin_filename•=•stdin_filename)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1165| ••••••••••••stdin_file•=•stdin_file,stdin_filename•=•stdin_filename)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1165| ••••••••••••stdin_file•=•stdin_file,stdin_filename•=•stdin_filename)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1165| ••••••••••••stdin_file•=•stdin_file,stdin_filename•=•stdin_filename)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1167| ••••••••table_creator.populate(dialect_id,stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1171| ••••••••return•QDataLoad(filename,start_time,time.time())
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1171| ••••••••return•QDataLoad(filename,start_time,time.time())
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1173| ••••def•load_data(self,filename,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1173| ••••def•load_data(self,filename,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1173| ••••def•load_data(self,filename,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1173| ••••def•load_data(self,filename,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+bin/qtextasdata.py
+|1174| ••••••••self._load_data(filename,input_params,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1174| ••••••••self._load_data(filename,input_params,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1174| ••••••••self._load_data(filename,input_params,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+bin/qtextasdata.py
+|1176| ••••def•load_data_from_string(self,filename,str_data,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1176| ••••def•load_data_from_string(self,filename,str_data,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1176| ••••def•load_data_from_string(self,filename,str_data,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1176| ••••def•load_data_from_string(self,filename,str_data,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (108 > 79 characters)'
+
+bin/qtextasdata.py
+|1176| ••••def•load_data_from_string(self,filename,str_data,input_params=QInputParams(),stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1179| ••••••••••••self._load_data(filename,input_params,stdin_file=sf,stdin_filename=filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1179| ••••••••••••self._load_data(filename,input_params,stdin_file=sf,stdin_filename=filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1179| ••••••••••••self._load_data(filename,input_params,stdin_file=sf,stdin_filename=filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1179| ••••••••••••self._load_data(filename,input_params,stdin_file=sf,stdin_filename=filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (128 > 79 characters)'
+
+bin/qtextasdata.py
+|1179| ••••••••••••self._load_data(filename,input_params,stdin_file=sf,stdin_filename=filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1184| ••••def•_ensure_data_is_loaded(self,sql_object,input_params,stdin_file,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1184| ••••def•_ensure_data_is_loaded(self,sql_object,input_params,stdin_file,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1184| ••••def•_ensure_data_is_loaded(self,sql_object,input_params,stdin_file,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1184| ••••def•_ensure_data_is_loaded(self,sql_object,input_params,stdin_file,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1184| ••••def•_ensure_data_is_loaded(self,sql_object,input_params,stdin_file,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (117 > 79 characters)'
+
+bin/qtextasdata.py
+|1184| ••••def•_ensure_data_is_loaded(self,sql_object,input_params,stdin_file,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1189| ••••••••••••data_load•=•self._load_data(filename,input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1189| ••••••••••••data_load•=•self._load_data(filename,input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1189| ••••••••••••data_load•=•self._load_data(filename,input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (154 > 79 characters)'
+
+bin/qtextasdata.py
+|1189| ••••••••••••data_load•=•self._load_data(filename,input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1189| ••••••••••••data_load•=•self._load_data(filename,input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1195| ••••def•materialize_sql_object(self,sql_object):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1197| ••••••••••••sql_object.set_effective_table_name(filename,self.table_creators[filename].table_name)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1197| ••••••••••••sql_object.set_effective_table_name(filename,self.table_creators[filename].table_name)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (98 > 79 characters)'
+
+bin/qtextasdata.py
+|1199| ••••def•_execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1199| ••••def•_execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1199| ••••def•_execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1199| ••••def•_execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1199| ••••def•_execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (112 > 79 characters)'
+
+bin/qtextasdata.py
+|1199| ••••def•_execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-',stop_after_analysis=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1207| ••••••••effective_input_params•=•self.default_input_params.merged_with(input_params)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+bin/qtextasdata.py
+|1211| ••••••••••••••••#•Hueristic•attempt•to•auto•convert•the•query•to•unicode•before•failing
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+bin/qtextasdata.py
+|1214| ••••••••••••••••error•=•QError(EncodedQueryException(),"Query•should•be•in•unicode.•Please•make•sure•to•provide•a•unicode•literal•string•or•decode•it•using•proper•the•character•encoding.",91)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1214| ••••••••••••••••error•=•QError(EncodedQueryException(),"Query•should•be•in•unicode.•Please•make•sure•to•provide•a•unicode•literal•string•or•decode•it•using•proper•the•character•encoding.",91)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (191 > 79 characters)'
+
+bin/qtextasdata.py
+|1214| ••••••••••••••••error•=•QError(EncodedQueryException(),"Query•should•be•in•unicode.•Please•make•sure•to•provide•a•unicode•literal•string•or•decode•it•using•proper•the•character•encoding.",91)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1215| ••••••••••••••••return•QOutput(error•=•error)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1215| ••••••••••••••••return•QOutput(error•=•error)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1221| ••••••••••••data_loads•+=•self._ensure_data_is_loaded(sql_object,effective_input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1221| ••••••••••••data_loads•+=•self._ensure_data_is_loaded(sql_object,effective_input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (180 > 79 characters)'
+
+bin/qtextasdata.py
+|1221| ••••••••••••data_loads•+=•self._ensure_data_is_loaded(sql_object,effective_input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1221| ••••••••••••data_loads•+=•self._ensure_data_is_loaded(sql_object,effective_input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1221| ••••••••••••data_loads•+=•self._ensure_data_is_loaded(sql_object,effective_input_params,stdin_file=stdin_file,stdin_filename=stdin_filename,stop_after_analysis=stop_after_analysis)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1231| ••••••••••••••••data•=•db_results_obj.results,•
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1231| ••••••••••••••••data•=•db_results_obj.results,•
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1231| ••••••••••••••••data•=•db_results_obj.results,•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|1232| ••••••••••••••••metadata•=•QMetadata(
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1232| ••••••••••••••••metadata•=•QMetadata(
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1236| ••••••••••••••••warnings•=•warnings,
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1236| ••••••••••••••••warnings•=•warnings,
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1237| ••••••••••••••••error•=•error)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1237| ••••••••••••••••error•=•error)
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1239| ••••••••except•EmptyDataException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1240| ••••••••••••warnings.append(QWarning(e,"Warning•-•data•is•empty"))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1241| ••••••••except•MissingHeaderException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1242| ••••••••••••error•=•QError(e,e.msg,117)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1242| ••••••••••••error•=•QError(e,e.msg,117)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1244| ••••••••••••error•=•QError(e,e.msg,30)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1244| ••••••••••••error•=•QError(e,e.msg,30)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1247| ••••••••••••error•=•QError(e,"query•error:•%s"•%•msg,1)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1247| ••••••••••••error•=•QError(e,"query•error:•%s"•%•msg,1)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1249| ••••••••••••••••warnings.append(QWarning(e,'Warning•-•There•seems•to•be•a•"no•such•column"•error,•and•-H•(header•line)•exists.•Please•make•sure•that•you•are•using•the•column•names•from•the•header•line•and•not•the•default•(cXX)•column•names'))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1249| ••••••••••••••••warnings.append(QWarning(e,'Warning•-•There•seems•to•be•a•"no•such•column"•error,•and•-H•(header•line)•exists.•Please•make•sure•that•you•are•using•the•column•names•from•the•header•line•and•not•the•default•(cXX)•column•names'))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (242 > 79 characters)'
+
+bin/qtextasdata.py
+|1251| ••••••••••••error•=•QError(e,e.msg,2)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1251| ••••••••••••error•=•QError(e,e.msg,2)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1253| ••••••••••••error•=•QError(e,"Cannot•decode•data.•Try•to•change•the•encoding•by•setting•it•using•the•-e•parameter.•Error:%s"•%•e,3)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1253| ••••••••••••error•=•QError(e,"Cannot•decode•data.•Try•to•change•the•encoding•by•setting•it•using•the•-e•parameter.•Error:%s"•%•e,3)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (131 > 79 characters)'
+
+bin/qtextasdata.py
+|1253| ••••••••••••error•=•QError(e,"Cannot•decode•data.•Try•to•change•the•encoding•by•setting•it•using•the•-e•parameter.•Error:%s"•%•e,3)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1255| ••••••••••••error•=•QError(e,"Bad•header•row:•%s"•%•e.msg,35)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1255| ••••••••••••error•=•QError(e,"Bad•header•row:•%s"•%•e.msg,35)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1256| ••••••••except•CannotUnzipStdInException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1257| ••••••••••••error•=•QError(e,"Cannot•decompress•standard•input.•Pipe•the•input•through•zcat•in•order•to•decompress.",36)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1257| ••••••••••••error•=•QError(e,"Cannot•decompress•standard•input.•Pipe•the•input•through•zcat•in•order•to•decompress.",36)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (120 > 79 characters)'
+
+bin/qtextasdata.py
+|1257| ••••••••••••error•=•QError(e,"Cannot•decompress•standard•input.•Pipe•the•input•through•zcat•in•order•to•decompress.",36)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1258| ••••••••except•UnprovidedStdInException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1259| ••••••••••••error•=•QError(e,"Standard•Input•must•be•provided•in•order•to•use•it•as•a•table",61)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1259| ••••••••••••error•=•QError(e,"Standard•Input•must•be•provided•in•order•to•use•it•as•a•table",61)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+bin/qtextasdata.py
+|1259| ••••••••••••error•=•QError(e,"Standard•Input•must•be•provided•in•order•to•use•it•as•a•table",61)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1260| ••••••••except•CouldNotConvertStringToNumericValueException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1261| ••••••••••••error•=•QError(e,"Could•not•convert•string•to•a•numeric•value.•Did•you•use•`-w•nonnumeric`•with•unquoted•string•values?•Error:•%s"•%•e.msg,58)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1261| ••••••••••••error•=•QError(e,"Could•not•convert•string•to•a•numeric•value.•Did•you•use•`-w•nonnumeric`•with•unquoted•string•values?•Error:•%s"•%•e.msg,58)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (154 > 79 characters)'
+
+bin/qtextasdata.py
+|1261| ••••••••••••error•=•QError(e,"Could•not•convert•string•to•a•numeric•value.•Did•you•use•`-w•nonnumeric`•with•unquoted•string•values?•Error:•%s"•%•e.msg,58)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1262| ••••••••except•CouldNotParseInputException,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1263| ••••••••••••error•=•QError(e,"Could•not•parse•the•input.•Please•make•sure•to•set•the•proper•-w•input-wrapping•parameter•for•your•input,•and•that•you•use•the•proper•input•encoding•(-e).•Error:•%s"•%•e.msg,59)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1263| ••••••••••••error•=•QError(e,"Could•not•parse•the•input.•Please•make•sure•to•set•the•proper•-w•input-wrapping•parameter•for•your•input,•and•that•you•use•the•proper•input•encoding•(-e).•Error:•%s"•%•e.msg,59)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (207 > 79 characters)'
+
+bin/qtextasdata.py
+|1263| ••••••••••••error•=•QError(e,"Could•not•parse•the•input.•Please•make•sure•to•set•the•proper•-w•input-wrapping•parameter•for•your•input,•and•that•you•use•the•proper•input•encoding•(-e).•Error:•%s"•%•e.msg,59)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1264| ••••••••except•KeyboardInterrupt,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1265| ••••••••••••warnings.append(QWarning(e,"Interrupted"))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1267| ••••••••••••error•=•QError(e,repr(e),199)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1267| ••••••••••••error•=•QError(e,repr(e),199)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ',''
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (137 > 79 characters)'
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1269| ••••••••return•QOutput(warnings•=•warnings,error•=•error•,•metadata=QMetadata(table_structures=table_structures,data_loads•=•data_loads))
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+bin/qtextasdata.py
+|1271| ••••def•execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1271| ••••def•execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1271| ••••def•execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1271| ••••def•execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1271| ••••def•execute(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+bin/qtextasdata.py
+|1272| ••••••••return•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=False)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1272| ••••••••return•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=False)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1272| ••••••••return•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=False)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1272| ••••••••return•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=False)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1272| ••••••••return•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=False)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (104 > 79 characters)'
+
+bin/qtextasdata.py
+|1276| ••••••••for•filename,table_creator•in•self.table_creators.iteritems():
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1284| ••••def•_create_materialized_files(self,table_creator):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1287| ••••••••for•filename,mfs•in•d.iteritems():
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1288| ••••••••••••m[filename]•=•QMaterializedFile(filename,mfs.is_stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1293| ••••••••for•filename,table_creator•in•self.table_creators.iteritems():
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1295| ••••••••••••column_types•=•[self.db.type_names[table_creator.column_inferer.get_column_dict()[k]].lower()•for•k•in•column_names]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (128 > 79 characters)'
+
+bin/qtextasdata.py
+|1297| ••••••••••••table_structure•=•QTableStructure(table_creator.filenames_str,materialized_files,column_names,column_types)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1297| ••••••••••••table_structure•=•QTableStructure(table_creator.filenames_str,materialized_files,column_names,column_types)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (119 > 79 characters)'
+
+bin/qtextasdata.py
+|1297| ••••••••••••table_structure•=•QTableStructure(table_creator.filenames_str,materialized_files,column_names,column_types)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1297| ••••••••••••table_structure•=•QTableStructure(table_creator.filenames_str,materialized_files,column_names,column_types)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1301| ••••def•analyze(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1301| ••••def•analyze(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1301| ••••def•analyze(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1301| ••••def•analyze(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1301| ••••def•analyze(self,query_str,input_params=None,stdin_file=None,stdin_filename='-'):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+bin/qtextasdata.py
+|1302| ••••••••q_output•=•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=True)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1302| ••••••••q_output•=•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=True)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1302| ••••••••q_output•=•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=True)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1302| ••••••••q_output•=•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=True)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (107 > 79 characters)'
+
+bin/qtextasdata.py
+|1302| ••••••••q_output•=•self._execute(query_str,input_params,stdin_file,stdin_filename,stop_after_analysis=True)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1306| def•escape_double_quotes_if_needed(v):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1307| ••••x•=•v.replace('"','""')
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1310| def•quote_none_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1310| def•quote_none_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1313| def•quote_minimal_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1313| def•quote_minimal_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1319| ••••return•v;
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+bin/qtextasdata.py
+|1321| def•quote_nonnumeric_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1321| def•quote_nonnumeric_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1326| ••••return•v;
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+bin/qtextasdata.py
+|1328| def•quote_all_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1328| def•quote_all_func(output_delimiter,v):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1334| class•QOutputParams(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1336| ••••••••••••delimiter='•',
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1337| ••••••••••••beautify=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1338| ••••••••••••output_quoting_mode='minimal',
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1339| ••••••••••••formatting=None,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1340| ••••••••••••output_header=False):
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1353| class•QOutputPrinter(object):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1354| ••••output_quoting_modes•=•{•••'minimal'•:•quote_minimal_func,
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '{''
+
+bin/qtextasdata.py
+|1354| ••••output_quoting_modes•=•{•••'minimal'•:•quote_minimal_func,
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1355| ••••••••••••••••••••••••'all'•:•quote_all_func,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1355| ••••••••••••••••••••••••'all'•:•quote_all_func,
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1356| ••••••••••••••••••••••••'nonnumeric'•:•quote_nonnumeric_func,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1356| ••••••••••••••••••••••••'nonnumeric'•:•quote_nonnumeric_func,
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1357| ••••••••••••••••••••••••'none'•:•quote_none_func•}
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1357| ••••••••••••••••••••••••'none'•:•quote_none_func•}
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+bin/qtextasdata.py
+|1357| ••••••••••••••••••••••••'none'•:•quote_none_func•}
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before '}''
+
+bin/qtextasdata.py
+|1359| ••••def•__init__(self,output_params,show_tracebacks=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1359| ••••def•__init__(self,output_params,show_tracebacks=False):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1363| ••••••••self.output_field_quoting_func•=•QOutputPrinter.output_quoting_modes[output_params.output_quoting_mode]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (111 > 79 characters)'
+
+bin/qtextasdata.py
+|1365| ••••def•print_errors_and_warnings(self,f,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1365| ••••def•print_errors_and_warnings(self,f,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1368| ••••••••••••print•>>f,error.msg
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1370| ••••••••••••••••print•>>f,error.traceback
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1373| ••••••••••••print•>>f,"%s"•%•warning.msg
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1375| ••••def•print_analysis(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1375| ••••def•print_analysis(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1375| ••••def•print_analysis(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1376| ••••••••self.print_errors_and_warnings(f_err,results)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1385| ••••••••••••print•>>f_out,"Table•for•file:•%s"•%•normalized_filename(table_structure.filenames_str)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1385| ••••••••••••print•>>f_out,"Table•for•file:•%s"•%•normalized_filename(table_structure.filenames_str)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (99 > 79 characters)'
+
+bin/qtextasdata.py
+|1386| ••••••••••••for•n,t•in•zip(table_structure.column_names,table_structure.column_types):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1386| ••••••••••••for•n,t•in•zip(table_structure.column_names,table_structure.column_types):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1386| ••••••••••••for•n,t•in•zip(table_structure.column_names,table_structure.column_types):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+bin/qtextasdata.py
+|1387| ••••••••••••••••print•>>f_out,"••`%s`•-•%s"•%•(n,t)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1387| ••••••••••••••••print•>>f_out,"••`%s`•-•%s"•%•(n,t)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1389| ••••def•print_output(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1389| ••••def•print_output(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1389| ••••def•print_output(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1391| ••••••••••••self._print_output(f_out,f_err,results)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1391| ••••••••••••self._print_output(f_out,f_err,results)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1405| ••••def•_print_output(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1405| ••••def•_print_output(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1405| ••••def•_print_output(self,f_out,f_err,results):
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1406| ••••••••self.print_errors_and_warnings(f_err,results)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1416| ••••••••••••••••data_with_possible_headers•=•data•+•[tuple(results.metadata.output_column_name_list)]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+bin/qtextasdata.py
+|1419| ••••••••••••max_lengths•=•determine_max_col_lengths(data_with_possible_headers,self.output_field_quoting_func,self.output_params.delimiter)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1419| ••••••••••••max_lengths•=•determine_max_col_lengths(data_with_possible_headers,self.output_field_quoting_func,self.output_params.delimiter)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (139 > 79 characters)'
+
+bin/qtextasdata.py
+|1419| ••••••••••••max_lengths•=•determine_max_col_lengths(data_with_possible_headers,self.output_field_quoting_func,self.output_params.delimiter)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1423| ••••••••••••••••[(x.split("=")[0],•x.split("=")[1])•for•x•in•self.output_params.formatting.split(",")])
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (103 > 79 characters)'
+
+bin/qtextasdata.py
+|1428| ••••••••••••if•self.output_params.output_header•and•results.metadata.output_column_name_list•is•not•None:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (105 > 79 characters)'
+
+bin/qtextasdata.py
+|1429| ••••••••••••••••data.insert(0,results.metadata.output_column_name_list)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1432| ••••••••••••••••skip_formatting•=•rownum•==•0•and•self.output_params.output_header
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+|1434| ••••••••••••••••••••if•formatting_dict•is•not•None•and•str(i•+•1)•in•formatting_dict.keys()•and•not•skip_formatting:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (116 > 79 characters)'
+
+bin/qtextasdata.py
+|1443| ••••••••••••••••••••••••row_str.append(fmt_str•%•self.output_field_quoting_func(self.output_params.delimiter,col))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (114 > 79 characters)'
+
+bin/qtextasdata.py
+|1443| ••••••••••••••••••••••••row_str.append(fmt_str•%•self.output_field_quoting_func(self.output_params.delimiter,col))
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1451| ••••••••except•TypeError,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1470| def•run_standalone():
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+bin/qtextasdata.py
+|1495| ••••default_formatting•=•get_option_with_default(p,•'string',•'formatting',•None)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+|1496| ••••default_encoding•=•get_option_with_default(p,•'string',•'encoding',•'UTF-8')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+bin/qtextasdata.py
+|1497| ••••default_output_encoding•=•get_option_with_default(p,•'string',•'encoding',•None)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+bin/qtextasdata.py
+|1498| ••••default_query_encoding•=•get_option_with_default(p,•'string',•'query_encoding',•locale.getpreferredencoding())
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (114 > 79 characters)'
+
+bin/qtextasdata.py
+|1499| ••••default_output_header•=•get_option_with_default(p,•'string',•'output_header',•False)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+bin/qtextasdata.py
+|1504| ••••••••Its•purpose•is•to•bring•SQL•expressive•power•to•manipulating•text•data•using•the•Linux•command•line.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (108 > 79 characters)'
+
+bin/qtextasdata.py
+|1506| ••••••••Basic•usage•is•q•"<sql•like•query>"•where•table•names•are•just•regular•file•names•(Use•-•to•read•from•standard•input)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (125 > 79 characters)'
+
+bin/qtextasdata.py
+|1507| ••••••••••••When•the•input•contains•a•header•row,•use•-H,•and•column•names•will•be•set•according•to•the•header•row•content.•If•there•isn't•a•header•row,•then•columns•will•automatically•be•named•c1..cN.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (201 > 79 characters)'
+
+bin/qtextasdata.py
+|1509| ••••••••Column•types•are•detected•automatically.•Use•-A•in•order•to•see•the•column•name/type•analysis.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+bin/qtextasdata.py
+|1511| ••••••••Delimiter•can•be•set•using•the•-d•(or•-t)•option.•Output•delimiter•can•be•set•using•-D
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+bin/qtextasdata.py
+|1518| ••••••••••••This•example•would•print•a•count•of•each•unique•permission•string•in•the•current•folder.
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (100 > 79 characters)'
+
+bin/qtextasdata.py
+|1521| ••••••••••••This•example•would•provide•the•average•and•the•sum•of•the•numbers•in•the•range•1•to•1000
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (100 > 79 characters)'
+
+bin/qtextasdata.py
+|1523| ••••••••••Example•3:•sudo•find•/tmp•-ls•|•q•"select•c5,c6,sum(c7)/1024.0/1024•as•total•from•-•group•by•c5,c6•order•by•total•desc"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (129 > 79 characters)'
+
+bin/qtextasdata.py
+|1524| ••••••••••••This•example•will•output•the•total•size•in•MB•per•user+group•in•the•/tmp•subtree
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+bin/qtextasdata.py
+|1530| ••••#-----------------------------------------------
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+bin/qtextasdata.py
+|1531| ••••parser.add_option("-v",•"--version",•dest="version",•default=False,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+bin/qtextasdata.py
+|1533| ••••#-----------------------------------------------
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+bin/qtextasdata.py
+|1534| ••••input_data_option_group•=•OptionGroup(parser,"Input•Data•Options")
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1535| ••••input_data_option_group.add_option("-H",•"--skip-header",•dest="skip_header",•default=default_skip_header,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (131 > 79 characters)'
+
+bin/qtextasdata.py
+|1536| ••••••••••••••••••••••help="Skip•header•row.•This•has•been•changed•from•earlier•version•-•Only•one•header•row•is•supported,•and•the•header•row•is•used•for•column•naming")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1536| ••••••••••••••••••••••help="Skip•header•row.•This•has•been•changed•from•earlier•version•-•Only•one•header•row•is•supported,•and•the•header•row•is•used•for•column•naming")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (170 > 79 characters)'
+
+bin/qtextasdata.py
+|1537| ••••input_data_option_group.add_option("-d",•"--delimiter",•dest="delimiter",•default=default_delimiter,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (104 > 79 characters)'
+
+bin/qtextasdata.py
+|1538| ••••••••••••••••••••••help="Field•delimiter.•If•none•specified,•then•space•is•used•as•the•delimiter.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1538| ••••••••••••••••••••••help="Field•delimiter.•If•none•specified,•then•space•is•used•as•the•delimiter.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+bin/qtextasdata.py
+|1539| ••••input_data_option_group.add_option("-t",•"--tab-delimited",•dest="tab_delimited",•default=False,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (121 > 79 characters)'
+
+bin/qtextasdata.py
+|1540| ••••••••••••••••••••••help="Same•as•-d•<tab>.•Just•a•shorthand•for•handling•standard•tab•delimited•file•You•can•use•$'\\t'•if•you•want•(this•is•how•Linux•expects•to•provide•tabs•in•the•command•line")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1540| ••••••••••••••••••••••help="Same•as•-d•<tab>.•Just•a•shorthand•for•handling•standard•tab•delimited•file•You•can•use•$'\\t'•if•you•want•(this•is•how•Linux•expects•to•provide•tabs•in•the•command•line")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (199 > 79 characters)'
+
+bin/qtextasdata.py
+|1541| ••••input_data_option_group.add_option("-e",•"--encoding",•dest="encoding",•default=default_encoding,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+bin/qtextasdata.py
+|1542| ••••••••••••••••••••••help="Input•file•encoding.•Defaults•to•UTF-8.•set•to•none•for•not•setting•any•encoding•-•faster,•but•at•your•own•risk...")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1542| ••••••••••••••••••••••help="Input•file•encoding.•Defaults•to•UTF-8.•set•to•none•for•not•setting•any•encoding•-•faster,•but•at•your•own•risk...")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (144 > 79 characters)'
+
+bin/qtextasdata.py
+|1543| ••••input_data_option_group.add_option("-z",•"--gzipped",•dest="gzipped",•default=default_gzipped,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (119 > 79 characters)'
+
+bin/qtextasdata.py
+|1544| ••••••••••••••••••••••help="Data•is•gzipped.•Useful•for•reading•from•stdin.•For•files,•.gz•means•automatic•gunzipping")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1544| ••••••••••••••••••••••help="Data•is•gzipped.•Useful•for•reading•from•stdin.•For•files,•.gz•means•automatic•gunzipping")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (119 > 79 characters)'
+
+bin/qtextasdata.py
+|1545| ••••input_data_option_group.add_option("-A",•"--analyze-only",•dest="analyze_only",•action='store_true',
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (104 > 79 characters)'
+
+bin/qtextasdata.py
+|1546| ••••••••••••••••••••••help="Analyze•sample•input•and•provide•information•about•data•types")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1546| ••••••••••••••••••••••help="Analyze•sample•input•and•provide•information•about•data•types")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+bin/qtextasdata.py
+|1547| ••••input_data_option_group.add_option("-m",•"--mode",•dest="mode",•default="relaxed",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+bin/qtextasdata.py
+|1548| ••••••••••••••••••••••help="Data•parsing•mode.•fluffy,•relaxed•and•strict.•In•strict•mode,•the•-c•column-count•parameter•must•be•supplied•as•well")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1548| ••••••••••••••••••••••help="Data•parsing•mode.•fluffy,•relaxed•and•strict.•In•strict•mode,•the•-c•column-count•parameter•must•be•supplied•as•well")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (147 > 79 characters)'
+
+bin/qtextasdata.py
+|1549| ••••input_data_option_group.add_option("-c",•"--column-count",•dest="column_count",•default=None,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (97 > 79 characters)'
+
+bin/qtextasdata.py
+|1550| ••••••••••••••••••••••help="Specific•column•count•when•using•relaxed•or•strict•mode")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1550| ••••••••••••••••••••••help="Specific•column•count•when•using•relaxed•or•strict•mode")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+bin/qtextasdata.py
+|1551| ••••input_data_option_group.add_option("-k",•"--keep-leading-whitespace",•dest="keep_leading_whitespace_in_values",•default=False,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (151 > 79 characters)'
+
+bin/qtextasdata.py
+|1552| ••••••••••••••••••••••help="Keep•leading•whitespace•in•values.•Default•behavior•strips•leading•whitespace•off•values,•in•order•to•provide•out-of-the-box•usability•for•simple•use•cases.•If•you•need•to•preserve•whitespace,•use•this•flag.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1552| ••••••••••••••••••••••help="Keep•leading•whitespace•in•values.•Default•behavior•strips•leading•whitespace•off•values,•in•order•to•provide•out-of-the-box•usability•for•simple•use•cases.•If•you•need•to•preserve•whitespace,•use•this•flag.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (237 > 79 characters)'
+
+bin/qtextasdata.py
+|1553| ••••input_data_option_group.add_option("--disable-double-double-quoting",•dest="disable_double_double_quoting",•default=True,•action="store_false",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (147 > 79 characters)'
+
+bin/qtextasdata.py
+|1554| ••••••••••••••••••••••help="Disable•support•for•double•double-quoting•for•escaping•the•double•quote•character.•By•default,•you•can•use•\"\"•inside•double•quoted•fields•to•escape•double•quotes.•Mainly•for•backward•compatibility.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1554| ••••••••••••••••••••••help="Disable•support•for•double•double-quoting•for•escaping•the•double•quote•character.•By•default,•you•can•use•\"\"•inside•double•quoted•fields•to•escape•double•quotes.•Mainly•for•backward•compatibility.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (229 > 79 characters)'
+
+bin/qtextasdata.py
+|1555| ••••input_data_option_group.add_option("--disable-escaped-double-quoting",•dest="disable_escaped_double_quoting",•default=True,•action="store_false",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (149 > 79 characters)'
+
+bin/qtextasdata.py
+|1556| ••••••••••••••••••••••help="Disable•support•for•escaped•double-quoting•for•escaping•the•double•quote•character.•By•default,•you•can•use•\\\"•inside•double•quoted•fields•to•escape•double•quotes.•Mainly•for•backward•compatibility.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1556| ••••••••••••••••••••••help="Disable•support•for•escaped•double-quoting•for•escaping•the•double•quote•character.•By•default,•you•can•use•\\\"•inside•double•quoted•fields•to•escape•double•quotes.•Mainly•for•backward•compatibility.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (230 > 79 characters)'
+
+bin/qtextasdata.py
+|1557| ••••input_data_option_group.add_option("--as-text",•dest="disable_column_type_detection",•default=False,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (125 > 79 characters)'
+
+bin/qtextasdata.py
+|1558| ••••••••••••••••••••••help="Don't•detect•column•types•-•All•columns•will•be•treated•as•text•columns")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1558| ••••••••••••••••••••••help="Don't•detect•column•types•-•All•columns•will•be•treated•as•text•columns")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+bin/qtextasdata.py
+|1559| ••••input_data_option_group.add_option("-w","--input-quoting-mode",dest="input_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1559| ••••input_data_option_group.add_option("-w","--input-quoting-mode",dest="input_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1559| ••••input_data_option_group.add_option("-w","--input-quoting-mode",dest="input_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (111 > 79 characters)'
+
+bin/qtextasdata.py
+|1559| ••••input_data_option_group.add_option("-w","--input-quoting-mode",dest="input_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1560| ••••••••••••••••••••••help="Input•quoting•mode.•Possible•values•are•all,•minimal•and•none.•Note•the•slightly•misleading•parameter•name,•and•see•the•matching•-W•parameter•for•output•quoting.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1560| ••••••••••••••••••••••help="Input•quoting•mode.•Possible•values•are•all,•minimal•and•none.•Note•the•slightly•misleading•parameter•name,•and•see•the•matching•-W•parameter•for•output•quoting.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (191 > 79 characters)'
+
+bin/qtextasdata.py
+|1562| ••••#-----------------------------------------------
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+bin/qtextasdata.py
+|1563| ••••output_data_option_group•=•OptionGroup(parser,"Output•Options")•
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1563| ••••output_data_option_group•=•OptionGroup(parser,"Output•Options")•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|1564| ••••output_data_option_group.add_option("-D",•"--output-delimiter",•dest="output_delimiter",•default=default_output_delimiter,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (126 > 79 characters)'
+
+bin/qtextasdata.py
+|1565| ••••••••••••••••••••••help="Field•delimiter•for•output.•If•none•specified,•then•the•-d•delimiter•is•used•if•present,•or•space•if•no•delimiter•is•specified")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1565| ••••••••••••••••••••••help="Field•delimiter•for•output.•If•none•specified,•then•the•-d•delimiter•is•used•if•present,•or•space•if•no•delimiter•is•specified")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (156 > 79 characters)'
+
+bin/qtextasdata.py
+|1566| ••••output_data_option_group.add_option("-T",•"--tab-delimited-output",•dest="tab_delimited_output",•default=False,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (136 > 79 characters)'
+
+bin/qtextasdata.py
+|1567| ••••••••••••••••••••••help="Same•as•-D•<tab>.•Just•a•shorthand•for•outputing•tab•delimited•output.•You•can•use•-D•$'\\t'•if•you•want.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1567| ••••••••••••••••••••••help="Same•as•-D•<tab>.•Just•a•shorthand•for•outputing•tab•delimited•output.•You•can•use•-D•$'\\t'•if•you•want.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (135 > 79 characters)'
+
+bin/qtextasdata.py
+|1568| ••••output_data_option_group.add_option("-O",•"--output-header",•dest="output_header",•default=default_output_header,•action="store_true",help="Output•header•line.•Output•column-names•are•determined•from•the•query•itself.•Use•column•aliases•in•order•to•set•your•column•names•in•the•query.•For•example,•'select•name•FirstName,value1/value2•MyCalculation•from•...'.•This•can•be•used•even•if•there•was•no•header•in•the•input.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (424 > 79 characters)'
+
+bin/qtextasdata.py
+|1568| ••••output_data_option_group.add_option("-O",•"--output-header",•dest="output_header",•default=default_output_header,•action="store_true",help="Output•header•line.•Output•column-names•are•determined•from•the•query•itself.•Use•column•aliases•in•order•to•set•your•column•names•in•the•query.•For•example,•'select•name•FirstName,value1/value2•MyCalculation•from•...'.•This•can•be•used•even•if•there•was•no•header•in•the•input.")
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1569| ••••output_data_option_group.add_option("-b",•"--beautify",•dest="beautify",•default=default_beautify,•action="store_true",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (123 > 79 characters)'
+
+bin/qtextasdata.py
+|1570| ••••••••••••••••••••••help="Beautify•output•according•to•actual•values.•Might•be•slow...")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1570| ••••••••••••••••••••••help="Beautify•output•according•to•actual•values.•Might•be•slow...")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+bin/qtextasdata.py
+|1571| ••••output_data_option_group.add_option("-f",•"--formatting",•dest="formatting",•default=default_formatting,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (108 > 79 characters)'
+
+bin/qtextasdata.py
+|1572| ••••••••••••••••••••••help="Output-level•formatting,•in•the•format•X=fmt,Y=fmt•etc,•where•X,Y•are•output•column•numbers•(e.g.•1•for•first•SELECT•column•etc.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1572| ••••••••••••••••••••••help="Output-level•formatting,•in•the•format•X=fmt,Y=fmt•etc,•where•X,Y•are•output•column•numbers•(e.g.•1•for•first•SELECT•column•etc.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (158 > 79 characters)'
+
+bin/qtextasdata.py
+|1573| ••••output_data_option_group.add_option("-E",•"--output-encoding",•dest="output_encoding",•default=default_output_encoding,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (123 > 79 characters)'
+
+bin/qtextasdata.py
+|1574| ••••••••••••••••••••••help="Output•encoding.•Defaults•to•'none',•leading•to•selecting•the•system/terminal•encoding")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1574| ••••••••••••••••••••••help="Output•encoding.•Defaults•to•'none',•leading•to•selecting•the•system/terminal•encoding")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (116 > 79 characters)'
+
+bin/qtextasdata.py
+|1575| ••••output_data_option_group.add_option("-W","--output-quoting-mode",dest="output_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1575| ••••output_data_option_group.add_option("-W","--output-quoting-mode",dest="output_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1575| ••••output_data_option_group.add_option("-W","--output-quoting-mode",dest="output_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (114 > 79 characters)'
+
+bin/qtextasdata.py
+|1575| ••••output_data_option_group.add_option("-W","--output-quoting-mode",dest="output_quoting_mode",default="minimal",
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1576| ••••••••••••••••••••••help="Output•quoting•mode.•Possible•values•are•all,•minimal,•nonnumeric•and•none.•Note•the•slightly•misleading•parameter•name,•and•see•the•matching•-w•parameter•for•input•quoting.")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1576| ••••••••••••••••••••••help="Output•quoting•mode.•Possible•values•are•all,•minimal,•nonnumeric•and•none.•Note•the•slightly•misleading•parameter•name,•and•see•the•matching•-w•parameter•for•input•quoting.")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (203 > 79 characters)'
+
+bin/qtextasdata.py
+|1578| ••••#-----------------------------------------------
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+bin/qtextasdata.py
+|1579| ••••query_option_group•=•OptionGroup(parser,"Query•Related•Options")•
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1579| ••••query_option_group•=•OptionGroup(parser,"Query•Related•Options")•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+bin/qtextasdata.py
+|1580| ••••query_option_group.add_option("-q",•"--query-filename",•dest="query_filename",•default=None,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+bin/qtextasdata.py
+|1581| ••••••••••••••••••••••help="Read•query•from•the•provided•filename•instead•of•the•command•line,•possibly•using•the•provided•query•encoding•(using•-Q).")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1581| ••••••••••••••••••••••help="Read•query•from•the•provided•filename•instead•of•the•command•line,•possibly•using•the•provided•query•encoding•(using•-Q).")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (151 > 79 characters)'
+
+bin/qtextasdata.py
+|1582| ••••query_option_group.add_option("-Q",•"--query-encoding",•dest="query_encoding",•default=default_query_encoding,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (114 > 79 characters)'
+
+bin/qtextasdata.py
+|1583| ••••••••••••••••••••••help="query•text•encoding.•Experimental.•Please•send•your•feedback•on•this")
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1583| ••••••••••••••••••••••help="query•text•encoding.•Experimental.•Please•send•your•feedback•on•this")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (98 > 79 characters)'
+
+bin/qtextasdata.py
+|1585| ••••#-----------------------------------------------
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+bin/qtextasdata.py
+|1595| ••••••••print•>>sys.stderr,"Must•provide•at•least•one•query•in•the•command•line,•or•through•a•file•with•the•-q•parameter"
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1595| ••••••••print•>>sys.stderr,"Must•provide•at•least•one•query•in•the•command•line,•or•through•a•file•with•the•-q•parameter"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (121 > 79 characters)'
+
+bin/qtextasdata.py
+|1600| ••••••••••••print•>>sys.stderr,"Can't•provide•both•a•query•file•and•a•query•on•the•command•line"
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1600| ••••••••••••print•>>sys.stderr,"Can't•provide•both•a•query•file•and•a•query•on•the•command•line"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+bin/qtextasdata.py
+|1607| ••••••••••••print•>>sys.stderr,"Could•not•read•query•from•file•%s"•%•options.query_filename
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1607| ••••••••••••print•>>sys.stderr,"Could•not•read•query•from•file•%s"•%•options.query_filename
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+bin/qtextasdata.py
+|1615| ••••••••••••••••query_strs[idx]•=•query_strs[idx].decode(options.query_encoding).strip()
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+bin/qtextasdata.py
+|1618| ••••••••••••••••••••print•>>sys.stderr,"Query•cannot•be•empty•(query•number•%s)"•%•(idx+1)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1618| ••••••••••••••••••••print•>>sys.stderr,"Query•cannot•be•empty•(query•number•%s)"•%•(idx+1)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+bin/qtextasdata.py
+|1621| ••••••••except•Exception,e:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1622| ••••••••••••print•>>sys.stderr,"Could•not•decode•query•number•%s•using•the•provided•query•encoding•(%s)"•%•(idx+1,options.query_encoding)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1622| ••••••••••••print•>>sys.stderr,"Could•not•decode•query•number•%s•using•the•provided•query•encoding•(%s)"•%•(idx+1,options.query_encoding)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (137 > 79 characters)'
+
+bin/qtextasdata.py
+|1622| ••••••••••••print•>>sys.stderr,"Could•not•decode•query•number•%s•using•the•provided•query•encoding•(%s)"•%•(idx+1,options.query_encoding)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1626| ••••••••print•>>sys.stderr,•"Parsing•mode•can•be•one•of•fluffy,•relaxed•or•strict"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+|1633| ••••••••print•>>sys.stderr,"Could•not•create•output•stream•using•output•encoding•%s"•%•(output_encoding)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1633| ••••••••print•>>sys.stderr,"Could•not•create•output•stream•using•output•encoding•%s"•%•(output_encoding)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (104 > 79 characters)'
+
+bin/qtextasdata.py
+|1636| ••••#•If•the•user•flagged•for•a•tab-delimited•file•then•set•the•delimiter•to•tab
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+bin/qtextasdata.py
+|1649| ••••if•options.input_quoting_mode•not•in•QTextAsData.input_quoting_modes.keys():
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+bin/qtextasdata.py
+|1650| ••••••••print•>>sys.stderr,"Input•quoting•mode•can•only•be•one•of•%s.•It•cannot•be•set•to•'%s'"•%•(",".join(QTextAsData.input_quoting_modes.keys()),options.input_quoting_mode)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1650| ••••••••print•>>sys.stderr,"Input•quoting•mode•can•only•be•one•of•%s.•It•cannot•be•set•to•'%s'"•%•(",".join(QTextAsData.input_quoting_modes.keys()),options.input_quoting_mode)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (175 > 79 characters)'
+
+bin/qtextasdata.py
+|1650| ••••••••print•>>sys.stderr,"Input•quoting•mode•can•only•be•one•of•%s.•It•cannot•be•set•to•'%s'"•%•(",".join(QTextAsData.input_quoting_modes.keys()),options.input_quoting_mode)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1653| ••••if•options.output_quoting_mode•not•in•QOutputPrinter.output_quoting_modes.keys():
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+bin/qtextasdata.py
+|1654| ••••••••print•>>sys.stderr,"Output•quoting•mode•can•only•be•one•of•%s.•It•cannot•be•set•to•'%s'"•%•(",".join(QOutputPrinter.output_quoting_modes.keys()),options.input_quoting_mode)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1654| ••••••••print•>>sys.stderr,"Output•quoting•mode•can•only•be•one•of•%s.•It•cannot•be•set•to•'%s'"•%•(",".join(QOutputPrinter.output_quoting_modes.keys()),options.input_quoting_mode)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (180 > 79 characters)'
+
+bin/qtextasdata.py
+|1654| ••••••••print•>>sys.stderr,"Output•quoting•mode•can•only•be•one•of•%s.•It•cannot•be•set•to•'%s'"•%•(",".join(QOutputPrinter.output_quoting_modes.keys()),options.input_quoting_mode)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1667| ••••••••••••print•>>sys.stderr,•"Encoding•%s•could•not•be•found"•%•options.encoding
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (83 > 79 characters)'
+
+bin/qtextasdata.py
+|1676| ••••••••••••#•if•an•input•delimiter•is•specified,•then•we•use•it•as•the•output•as
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+bin/qtextasdata.py
+|1680| ••••••••••••#•if•no•input•delimiter•is•specified,•then•we•use•space•as•the•default
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+bin/qtextasdata.py
+|1685| ••••••••delimiter=options.delimiter,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1686| ••••••••input_encoding=options.encoding,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1687| ••••••••gzipped_input=options.gzipped,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1688| ••••••••parsing_mode=options.mode,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1689| ••••••••expected_column_count=expected_column_count,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1690| ••••••••keep_leading_whitespace_in_values=options.keep_leading_whitespace_in_values,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1690| ••••••••keep_leading_whitespace_in_values=options.keep_leading_whitespace_in_values,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+bin/qtextasdata.py
+|1691| ••••••••disable_double_double_quoting=options.disable_double_double_quoting,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1692| ••••••••disable_escaped_double_quoting=options.disable_escaped_double_quoting,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1693| ••••••••input_quoting_mode=options.input_quoting_mode,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1694| ••••••••disable_column_type_detection=options.disable_column_type_detection)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+bin/qtextasdata.py
+|1703| ••••q_output_printer•=•QOutputPrinter(output_params,show_tracebacks=DEBUG)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1707| ••••••••••••q_output•=•q_engine.analyze(query_str,stdin_file=sys.stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1708| ••••••••••••q_output_printer.print_analysis(STDOUT,sys.stderr,q_output)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1708| ••••••••••••q_output_printer.print_analysis(STDOUT,sys.stderr,q_output)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1710| ••••••••••••q_output•=•q_engine.execute(query_str,stdin_file=sys.stdin)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1711| ••••••••••••q_output_printer.print_output(STDOUT,sys.stderr,q_output)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+bin/qtextasdata.py
+|1711| ••••••••••••q_output_printer.print_output(STDOUT,sys.stderr,q_output)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+Executing section markdown...
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/RATIONALE.markdown
+|    |++++| /app/doc/RATIONALE.markdown
+|   1|    |-# q - Treating Text as a Database 
+|    |   1|+# q - Treating Text as a Database
+|   2|   2| 
+|   3|   3| ## Why aren't other Linux tools enough?
+|    |   4|+
+|   4|   5| The standard Linux tools are amazing and I use them all the time, but the whole idea of Linux is mixing-and-matching the best tools for each part of job. This tool adds the declarative power of SQL to the Linux toolset, without loosing any of the other tools' benefits. In fact, I often use q together with other Linux tools, the same way I pipe awk/sed and grep together all the time.
+|   5|   6| 
+|   6|   7| One additional thing to note is that many Linux tools treat text as text and not as data. In that sense, you can look at q as a meta-tool which provides access to all the data-related tools that SQL provides (e.g. expressions, ordering, grouping, aggregation etc.).
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/RATIONALE.markdown
+|    |++++| /app/doc/RATIONALE.markdown
+|   6|   6| One additional thing to note is that many Linux tools treat text as text and not as data. In that sense, you can look at q as a meta-tool which provides access to all the data-related tools that SQL provides (e.g. expressions, ordering, grouping, aggregation etc.).
+|   7|   7| 
+|   8|   8| ## Philosophy
+|   9|    |-This tool has been designed with general Linux/Unix design principles in mind. If you're interested in these general design principles, read the amazing book http://catb.org/~esr/writings/taoup/ and specifically http://catb.org/~esr/writings/taoup/html/ch01s06.html. If you believe that the way this tool works goes strongly against any of the principles, I would love to hear your view about it.
+|    |   9|+
+|    |  10|+This tool has been designed with general Linux/Unix design principles in mind. If you're interested in these general design principles, read the amazing book <http://catb.org/~esr/writings/taoup/> and specifically <http://catb.org/~esr/writings/taoup/html/ch01s06.html>. If you believe that the way this tool works goes strongly against any of the principles, I would love to hear your view about it.
+|  10|  11| 
+|  11|  12| ## Contact
+|    |  13|+
+|  12|  14| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  13|  15| 
+|  14|  16| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/RATIONALE.markdown
+|    |++++| /app/doc/RATIONALE.markdown
+|  12|  12| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  13|  13| 
+|  14|  14| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|  15|    |-
+
+doc/RATIONALE.markdown
+|   4| The•standard•Linux•tools•are•amazing•and•I•use•them•all•the•time,•but•the•whole•idea•of•Linux•is•mixing-and-matching•the•best•tools•for•each•part•of•job.•This•tool•adds•the•declarative•power•of•SQL•to•the•Linux•toolset,•without•loosing•any•of•the•other•tools'•benefits.•In•fact,•I•often•use•q•together•with•other•Linux•tools,•the•same•way•I•pipe•awk/sed•and•grep•together•all•the•time.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (385 > 79)
+
+doc/RATIONALE.markdown
+|   6| One•additional•thing•to•note•is•that•many•Linux•tools•treat•text•as•text•and•not•as•data.•In•that•sense,•you•can•look•at•q•as•a•meta-tool•which•provides•access•to•all•the•data-related•tools•that•SQL•provides•(e.g.•expressions,•ordering,•grouping,•aggregation•etc.).
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (265 > 79)
+
+doc/RATIONALE.markdown
+|   9| This•tool•has•been•designed•with•general•Linux/Unix•design•principles•in•mind.•If•you're•interested•in•these•general•design•principles,•read•the•amazing•book•http://catb.org/~esr/writings/taoup/•and•specifically•http://catb.org/~esr/writings/taoup/html/ch01s06.html.•If•you•believe•that•the•way•this•tool•works•goes•strongly•against•any•of•the•principles,•I•would•love•to•hear•your•view•about•it.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (396 > 79)
+
+doc/RATIONALE.markdown
+|  12| Any•feedback/suggestions/complaints•regarding•this•tool•would•be•much•appreciated.•Contributions•are•most•welcome•as•well,•of•course.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (133 > 79)
+
+doc/RATIONALE.markdown
+|  14| Harel•Ben-Attia,•harelba@gmail.com,•[@harelba](https://twitter.com/harelba)•on•Twitter
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (86 > 79)
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/README.markdown
+|    |++++| /app/README.markdown
+|   1|   1| # q - Text as Data
+|    |   2|+
+|   2|   3| q is a command line tool that allows direct execution of SQL-like queries on CSVs/TSVs (and any other tabular text files).
+|   3|   4| 
+|   4|   5| q treats ordinary files as database tables, and supports all SQL constructs, such as WHERE, GROUP BY, JOINs etc. It supports automatic column name and column type detection, and provides full support for multiple encodings.
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/README.markdown
+|    |++++| /app/README.markdown
+|   3|   3| 
+|   4|   4| q treats ordinary files as database tables, and supports all SQL constructs, such as WHERE, GROUP BY, JOINs etc. It supports automatic column name and column type detection, and provides full support for multiple encodings.
+|   5|   5| 
+|   6|    |-q's web site is [http://harelba.github.io/q/](http://harelba.github.io/q/). It contains everything you need to download and use q in no time.
+|    |   6|+q's web site is <http://harelba.github.io/q/>. It contains everything you need to download and use q in no time.
+|   7|   7| 
+|   8|   8| ## Installation.
+|    |   9|+
+|   9|  10| Extremely simple. 
+|  10|  11| 
+|  11|  12| Instructions for all OSs are [here](http://harelba.github.io/q/install.html). 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/README.markdown
+|    |++++| /app/README.markdown
+|  17|  17| Go [here](http://harelba.github.io/q/examples.html) for more examples.
+|  18|  18| 
+|  19|  19| ## Python API
+|    |  20|+
+|  20|  21| A development branch for exposing q's capabilities as a <strong>Python module</strong> can be viewed <a href="https://github.com/harelba/q/tree/generic-injected-streams/PYTHON-API.markdown">here</a>, along with examples of the alpha version of the API.<br/>Existing functionality as a command-line tool will not be affected by this. Your input will be most appreciated.
+|  21|  22| 
+|  22|  23| ## Change log
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/README.markdown
+|    |++++| /app/README.markdown
+|  20|  20| A development branch for exposing q's capabilities as a <strong>Python module</strong> can be viewed <a href="https://github.com/harelba/q/tree/generic-injected-streams/PYTHON-API.markdown">here</a>, along with examples of the alpha version of the API.<br/>Existing functionality as a command-line tool will not be affected by this. Your input will be most appreciated.
+|  21|  21| 
+|  22|  22| ## Change log
+|    |  23|+
+|  23|  24| Click [here](http://harelba.github.io/q/changelog.html) to see the change log.
+|  24|  25| 
+|  25|  26| ## Contact
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/README.markdown
+|    |++++| /app/README.markdown
+|  23|  23| Click [here](http://harelba.github.io/q/changelog.html) to see the change log.
+|  24|  24| 
+|  25|  25| ## Contact
+|    |  26|+
+|  26|  27| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  27|  28| 
+|  28|  29| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/README.markdown
+|    |++++| /app/README.markdown
+|  28|  28| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|  29|  29| 
+|  30|  30| q on twitter: #qtextasdata
+|  31|    |-
+
+README.markdown
+|   2| q•is•a•command•line•tool•that•allows•direct•execution•of•SQL-like•queries•on•CSVs/TSVs•(and•any•other•tabular•text•files).
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (122 > 79)
+
+README.markdown
+|   4| q•treats•ordinary•files•as•database•tables,•and•supports•all•SQL•constructs,•such•as•WHERE,•GROUP•BY,•JOINs•etc.•It•supports•automatic•column•name•and•column•type•detection,•and•provides•full•support•for•multiple•encodings.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (223 > 79)
+
+README.markdown
+|   6| q's•web•site•is•[http://harelba.github.io/q/](http://harelba.github.io/q/).•It•contains•everything•you•need•to•download•and•use•q•in•no•time.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (141 > 79)
+
+README.markdown
+|  20| A•development•branch•for•exposing•q's•capabilities•as•a•<strong>Python•module</strong>•can•be•viewed•<a•href="https://github.com/harelba/q/tree/generic-injected-streams/PYTHON-API.markdown">here</a>,•along•with•examples•of•the•alpha•version•of•the•API.<br/>Existing•functionality•as•a•command-line•tool•will•not•be•affected•by•this.•Your•input•will•be•most•appreciated.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (369 > 79)
+
+README.markdown
+|  26| Any•feedback/suggestions/complaints•regarding•this•tool•would•be•much•appreciated.•Contributions•are•most•welcome•as•well,•of•course.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (133 > 79)
+
+README.markdown
+|  28| Harel•Ben-Attia,•harelba@gmail.com,•[@harelba](https://twitter.com/harelba)•on•Twitter
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (86 > 79)
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+|   1|   1| # q - Text as Data
+|   2|   2| 
+|   3|   3| ## SYNOPSIS
+|   4|    |-	`q <flags> <query>`
+|   5|   4| 
+|   6|    |-	Simplest execution is `q "SELECT * FROM myfile"` which prints the entire file.
+|    |   5|+```
+|    |   6|+`q <flags> <query>`
+|    |   7|+
+|    |   8|+Simplest execution is `q "SELECT * FROM myfile"` which prints the entire file.
+|    |   9|+```
+|   7|  10| 
+|   8|  11| ## DESCRIPTION
+|    |  12|+
+|   9|  13| q allows performing SQL-like statements on tabular text data. Its purpose is to bring SQL expressive power to the Linux command line and to provide easy access to text as actual data.
+|  10|  14| 
+|  11|  15| Query should be an SQL-like query which contains filenames instead of table names (or - for stdin). The query itself should be provided as one parameter to the tool (i.e. enclosed in quotes).
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+|  22|  22| 
+|  23|  23| All sqlite3 SQL constructs are supported, including joins across files (use an alias for each table).
+|  24|  24| 
+|  25|    |-See https://github.com/harelba/q for more details.
+|    |  25|+See <https://github.com/harelba/q> for more details.
+|  26|  26| 
+|  27|  27| ## QUERY
+|    |  28|+
+|  28|  29| q gets one parameter - An SQL-like query. 
+|  29|  30| 
+|  30|  31| Any standard SQL expression, condition (both WHERE and HAVING), GROUP BY, ORDER BY etc. are allowed.
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+|  31|  31| 
+|  32|  32| JOINs are supported and Subqueries are supported in the WHERE clause, but unfortunately not in the FROM clause for now. Use table aliases when performing JOINs.
+|  33|  33| 
+|  34|    |-The SQL syntax itself is sqlite's syntax. For details look at http://www.sqlite.org/lang.html or search the net for examples.
+|    |  34|+The SQL syntax itself is sqlite's syntax. For details look at <http://www.sqlite.org/lang.html> or search the net for examples.
+|  35|  35| 
+|  36|  36| **NOTE:** Full type detection is implemented, so there is no need for any casting or anything.
+|  37|  37| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+|  38|  38| **NOTE2:** When using the `-O` output header option, use column name aliases if you want to control the output column names. For example, `q -O -H "select count(*) cnt,sum(*) as mysum from -"` would output `cnt` and `mysum` as the output header column names.
+|  39|  39| 
+|  40|  40| ## RUNTIME OPTIONS
+|    |  41|+
+|  41|  42| q can also get some runtime flags. The following parameters can be used, all optional:
+|  42|  43| 
+|  43|  44| ````
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+|  40|  40| ## RUNTIME OPTIONS
+|  41|  41| q can also get some runtime flags. The following parameters can be used, all optional:
+|  42|  42| 
+|  43|    |-````
+|    |  43|+```
+|  44|  44| Options:
+|  45|  45|   -h, --help            show this help message and exit
+|  46|  46|   -v, --version         Print version
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 130| 130|     -Q QUERY_ENCODING, --query-encoding=QUERY_ENCODING
+| 131| 131|                         query text encoding. Experimental. Please send your
+| 132| 132|                         feedback on this
+| 133|    |-````
+|    | 133|+```
+| 134| 134| 
+| 135| 135| ### Table names
+|    | 136|+
+| 136| 137| The table names are the actual file names that you want to read from. Path names are allowed. Use "-" if you want to read from stdin (e.g. `q "SELECT * FROM -"`)
+| 137| 138| 
+| 138| 139| Multiple files can be concatenated by using one of both of the following ways:
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 137| 137| 
+| 138| 138| Multiple files can be concatenated by using one of both of the following ways:
+| 139| 139| 
+| 140|    |-* Separating the filenames with a + sign: `SELECT * FROM datafile1+datafile2+datefile3`.
+| 141|    |-* Using glob matching: `SELECT * FROM mydata*.dat`
+|    | 140|+- Separating the filenames with a + sign: `SELECT * FROM datafile1+datafile2+datefile3`.
+|    | 141|+- Using glob matching: `SELECT * FROM mydata*.dat`
+| 142| 142| 
+| 143| 143| Files with .gz extension are considered to be gzipped and decompressed on the fly.
+| 144| 144| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 143| 143| Files with .gz extension are considered to be gzipped and decompressed on the fly.
+| 144| 144| 
+| 145| 145| ### Parsing Modes
+|    | 146|+
+| 146| 147| q supports multiple parsing modes:
+| 147| 148| 
+| 148| 149| * `relaxed` - This is the default mode. It tries to lean towards simplicity of use. When a row doesn't contains enough columns, they'll be filled with nulls, and when there are too many, the extra values will be merged to the last column. Defining the number of expected columns in this mode is done using the `-c` parameter. If it is not provided, then the number of columns is detected automatically (In most use cases, there is no need to specify `-c`)
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 145| 145| ### Parsing Modes
+| 146| 146| q supports multiple parsing modes:
+| 147| 147| 
+| 148|    |-* `relaxed` - This is the default mode. It tries to lean towards simplicity of use. When a row doesn't contains enough columns, they'll be filled with nulls, and when there are too many, the extra values will be merged to the last column. Defining the number of expected columns in this mode is done using the `-c` parameter. If it is not provided, then the number of columns is detected automatically (In most use cases, there is no need to specify `-c`)
+| 149|    |-* `strict` - Strict mode is for hardcore csv/tsv parsing. Whenever a row doesn't contain the proper number of columns, processing will stop. `-c` must be provided when using this mode
+| 150|    |-* `fluffy` - This mode should not be used, and is just some kind of "backward compatible" parsing mode which was used by q previously. It's left as a separate parsing mode on purpose, in order to accomodate existing users. If you are such a user, please open a bug for your use case, and I'll see how I can incorporate it into the other modes. It is reasonable to say that this mode will be removed in the future.
+|    | 148|+- `relaxed` - This is the default mode. It tries to lean towards simplicity of use. When a row doesn't contains enough columns, they'll be filled with nulls, and when there are too many, the extra values will be merged to the last column. Defining the number of expected columns in this mode is done using the `-c` parameter. If it is not provided, then the number of columns is detected automatically (In most use cases, there is no need to specify `-c`)
+|    | 149|+- `strict` - Strict mode is for hardcore csv/tsv parsing. Whenever a row doesn't contain the proper number of columns, processing will stop. `-c` must be provided when using this mode
+|    | 150|+- `fluffy` - This mode should not be used, and is just some kind of "backward compatible" parsing mode which was used by q previously. It's left as a separate parsing mode on purpose, in order to accomodate existing users. If you are such a user, please open a bug for your use case, and I'll see how I can incorporate it into the other modes. It is reasonable to say that this mode will be removed in the future.
+| 151| 151| 
+| 152| 152| ### Output formatting option
+|    | 153|+
+| 153| 154| The format of F is as a list of X=f separated by commas, where X is a column number and f is a python format:
+| 154| 155| 
+| 155| 156| * X - column number - This is the SELECTed column (or expression) number, not the one from the original table. E.g, 1 is the first SELECTed column, 3 is the third SELECTed column.
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 152| 152| ### Output formatting option
+| 153| 153| The format of F is as a list of X=f separated by commas, where X is a column number and f is a python format:
+| 154| 154| 
+| 155|    |-* X - column number - This is the SELECTed column (or expression) number, not the one from the original table. E.g, 1 is the first SELECTed column, 3 is the third SELECTed column.
+| 156|    |-* f - A python formatting string - See http://docs.python.org/release/2.4.4/lib/typesseq-strings.html for details if needed.
+| 157|    |-** Example: `-f 3=%-10s,5=%4.3f,1=%x`
+|    | 155|+- X - column number - This is the SELECTed column (or expression) number, not the one from the original table. E.g, 1 is the first SELECTed column, 3 is the third SELECTed column.
+|    | 156|+- f - A python formatting string - See <http://docs.python.org/release/2.4.4/lib/typesseq-strings.html> for details if needed.
+|    | 157|+  \*\* Example: `-f 3=%-10s,5=%4.3f,1=%x`
+| 158| 158| 
+| 159| 159| ## EXAMPLES
+|    | 160|+
+| 160| 161| Example 1: `ls -ltrd * | q "select c1,count(1) from - group by c1"`
+| 161| 162| 
+| 162| 163| 	This example would print a count of each unique permission string in the current folder.
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 159| 159| ## EXAMPLES
+| 160| 160| Example 1: `ls -ltrd * | q "select c1,count(1) from - group by c1"`
+| 161| 161| 
+| 162|    |-	This example would print a count of each unique permission string in the current folder.
+|    | 162|+```
+|    | 163|+This example would print a count of each unique permission string in the current folder.
+|    | 164|+```
+| 163| 165| 
+| 164| 166| Example 2: `seq 1 1000 | q "select avg(c1),sum(c1) from -"`
+| 165| 167| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 163| 163| 
+| 164| 164| Example 2: `seq 1 1000 | q "select avg(c1),sum(c1) from -"`
+| 165| 165| 
+| 166|    |-	This example would provide the average and the sum of the numbers in the range 1 to 1000
+|    | 166|+```
+|    | 167|+This example would provide the average and the sum of the numbers in the range 1 to 1000
+|    | 168|+```
+| 167| 169| 
+| 168| 170| Example 3: `sudo find /tmp -ls | q "select c5,c6,sum(c7)/1024.0/1024 as total from - group by c5,c6 order by total desc"`
+| 169| 171| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 167| 167| 
+| 168| 168| Example 3: `sudo find /tmp -ls | q "select c5,c6,sum(c7)/1024.0/1024 as total from - group by c5,c6 order by total desc"`
+| 169| 169| 
+| 170|    |-	This example will output the total size in MB per user+group in the /tmp subtree
+|    | 170|+```
+|    | 171|+This example will output the total size in MB per user+group in the /tmp subtree
+|    | 172|+```
+| 171| 173| 
+| 172| 174| Example 4: `ps -ef | q -H "select UID,count(*) cnt from - group by UID order by cnt desc limit 3"`
+| 173| 175| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 171| 171| 
+| 172| 172| Example 4: `ps -ef | q -H "select UID,count(*) cnt from - group by UID order by cnt desc limit 3"`
+| 173| 173| 
+| 174|    |-	This example will show process counts per UID, calculated from ps data. Note that the column names provided by ps are being used as column name in the query (The -H flag activates that option)
+|    | 174|+```
+|    | 175|+This example will show process counts per UID, calculated from ps data. Note that the column names provided by ps are being used as column name in the query (The -H flag activates that option)
+|    | 176|+```
+| 175| 177| 
+| 176| 178| ## AUTHOR
+|    | 179|+
+| 177| 180| Harel Ben-Attia (harelba@gmail.com)
+| 178| 181| 
+| 179| 182| [@harelba](https://twitter.com/harelba) on Twitter
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 181| 181| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+| 182| 182| 
+| 183| 183| ## COPYRIGHT
+|    | 184|+
+| 184| 185| Copyright (C) 2012--2014 Harel Ben Attia
+| 185| 186| 
+| 186| 187| This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3, or (at your option) any later version.
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/USAGE.markdown
+|    |++++| /app/doc/USAGE.markdown
+| 186| 186| This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3, or (at your option) any later version.
+| 187| 187| 
+| 188| 188| This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA 
+| 189|    |-
+| 190|    |-
+
+doc/USAGE.markdown
+|   6| »   Simplest•execution•is•`q•"SELECT•*•FROM•myfile"`•which•prints•the•entire•file.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (82 > 79)
+
+doc/USAGE.markdown
+|   9| q•allows•performing•SQL-like•statements•on•tabular•text•data.•Its•purpose•is•to•bring•SQL•expressive•power•to•the•Linux•command•line•and•to•provide•easy•access•to•text•as•actual•data.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (183 > 79)
+
+doc/USAGE.markdown
+|  11| Query•should•be•an•SQL-like•query•which•contains•filenames•instead•of•table•names•(or•-•for•stdin).•The•query•itself•should•be•provided•as•one•parameter•to•the•tool•(i.e.•enclosed•in•quotes).
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (191 > 79)
+
+doc/USAGE.markdown
+|  13| Use•`-H`•to•signify•that•the•input•contains•a•header•line.•Column•names•will•be•detected•automatically•in•that•case,•and•can•be•used•in•the•query.•If•this•option•is•not•provided,•columns•will•be•named•cX,•starting•with•1•(e.g.•q•"SELECT•c3,c8•from•...").
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (254 > 79)
+
+doc/USAGE.markdown
+|  19| Please•note•that•column•names•that•include•spaces•need•to•be•used•in•the•query•with•back-ticks,•as•per•the•sqlite•standard.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (123 > 79)
+
+doc/USAGE.markdown
+|  21| Query/Input/Output•encodings•are•fully•supported•(and•q•tries•to•provide•out-of-the-box•usability•in•that•area).•Please•use•`-e`,`-E`•and•`-Q`•to•control•encoding•if•needed.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (173 > 79)
+
+doc/USAGE.markdown
+|  23| All•sqlite3•SQL•constructs•are•supported,•including•joins•across•files•(use•an•alias•for•each•table).
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (101 > 79)
+
+doc/USAGE.markdown
+|  30| Any•standard•SQL•expression,•condition•(both•WHERE•and•HAVING),•GROUP•BY,•ORDER•BY•etc.•are•allowed.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (100 > 79)
+
+doc/USAGE.markdown
+|  32| JOINs•are•supported•and•Subqueries•are•supported•in•the•WHERE•clause,•but•unfortunately•not•in•the•FROM•clause•for•now.•Use•table•aliases•when•performing•JOINs.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (160 > 79)
+
+doc/USAGE.markdown
+|  34| The•SQL•syntax•itself•is•sqlite's•syntax.•For•details•look•at•http://www.sqlite.org/lang.html•or•search•the•net•for•examples.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (125 > 79)
+
+doc/USAGE.markdown
+|  36| **NOTE:**•Full•type•detection•is•implemented,•so•there•is•no•need•for•any•casting•or•anything.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (94 > 79)
+
+doc/USAGE.markdown
+|  38| **NOTE2:**•When•using•the•`-O`•output•header•option,•use•column•name•aliases•if•you•want•to•control•the•output•column•names.•For•example,•`q•-O•-H•"select•count(*)•cnt,sum(*)•as•mysum•from•-"`•would•output•`cnt`•and•`mysum`•as•the•output•header•column•names.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (258 > 79)
+
+doc/USAGE.markdown
+|  41| q•can•also•get•some•runtime•flags.•The•following•parameters•can•be•used,•all•optional:
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (86 > 79)
+
+doc/USAGE.markdown
+| 136| The•table•names•are•the•actual•file•names•that•you•want•to•read•from.•Path•names•are•allowed.•Use•"-"•if•you•want•to•read•from•stdin•(e.g.•`q•"SELECT•*•FROM•-"`)
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (161 > 79)
+
+doc/USAGE.markdown
+| 140| *•Separating•the•filenames•with•a•+•sign:•`SELECT•*•FROM•datafile1+datafile2+datefile3`.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (88 > 79)
+
+doc/USAGE.markdown
+| 143| Files•with•.gz•extension•are•considered•to•be•gzipped•and•decompressed•on•the•fly.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (82 > 79)
+
+doc/USAGE.markdown
+| 148| *•`relaxed`•-•This•is•the•default•mode.•It•tries•to•lean•towards•simplicity•of•use.•When•a•row•doesn't•contains•enough•columns,•they'll•be•filled•with•nulls,•and•when•there•are•too•many,•the•extra•values•will•be•merged•to•the•last•column.•Defining•the•number•of•expected•columns•in•this•mode•is•done•using•the•`-c`•parameter.•If•it•is•not•provided,•then•the•number•of•columns•is•detected•automatically•(In•most•use•cases,•there•is•no•need•to•specify•`-c`)
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (455 > 79)
+
+doc/USAGE.markdown
+| 149| *•`strict`•-•Strict•mode•is•for•hardcore•csv/tsv•parsing.•Whenever•a•row•doesn't•contain•the•proper•number•of•columns,•processing•will•stop.•`-c`•must•be•provided•when•using•this•mode
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (183 > 79)
+
+doc/USAGE.markdown
+| 150| *•`fluffy`•-•This•mode•should•not•be•used,•and•is•just•some•kind•of•"backward•compatible"•parsing•mode•which•was•used•by•q•previously.•It's•left•as•a•separate•parsing•mode•on•purpose,•in•order•to•accomodate•existing•users.•If•you•are•such•a•user,•please•open•a•bug•for•your•use•case,•and•I'll•see•how•I•can•incorporate•it•into•the•other•modes.•It•is•reasonable•to•say•that•this•mode•will•be•removed•in•the•future.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (413 > 79)
+
+doc/USAGE.markdown
+| 153| The•format•of•F•is•as•a•list•of•X=f•separated•by•commas,•where•X•is•a•column•number•and•f•is•a•python•format:
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (109 > 79)
+
+doc/USAGE.markdown
+| 155| *•X•-•column•number•-•This•is•the•SELECTed•column•(or•expression)•number,•not•the•one•from•the•original•table.•E.g,•1•is•the•first•SELECTed•column,•3•is•the•third•SELECTed•column.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (179 > 79)
+
+doc/USAGE.markdown
+| 156| *•f•-•A•python•formatting•string•-•See•http://docs.python.org/release/2.4.4/lib/typesseq-strings.html•for•details•if•needed.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (124 > 79)
+
+doc/USAGE.markdown
+| 162| »   This•example•would•print•a•count•of•each•unique•permission•string•in•the•current•folder.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (92 > 79)
+
+doc/USAGE.markdown
+| 166| »   This•example•would•provide•the•average•and•the•sum•of•the•numbers•in•the•range•1•to•1000
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (92 > 79)
+
+doc/USAGE.markdown
+| 168| Example•3:•`sudo•find•/tmp•-ls•|•q•"select•c5,c6,sum(c7)/1024.0/1024•as•total•from•-•group•by•c5,c6•order•by•total•desc"`
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (121 > 79)
+
+doc/USAGE.markdown
+| 170| »   This•example•will•output•the•total•size•in•MB•per•user+group•in•the•/tmp•subtree
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (84 > 79)
+
+doc/USAGE.markdown
+| 172| Example•4:•`ps•-ef•|•q•-H•"select•UID,count(*)•cnt•from•-•group•by•UID•order•by•cnt•desc•limit•3"`
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (98 > 79)
+
+doc/USAGE.markdown
+| 174| »   This•example•will•show•process•counts•per•UID,•calculated•from•ps•data.•Note•that•the•column•names•provided•by•ps•are•being•used•as•column•name•in•the•query•(The•-H•flag•activates•that•option)
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (196 > 79)
+
+doc/USAGE.markdown
+| 181| Any•feedback/suggestions/complaints•regarding•this•tool•would•be•much•appreciated.•Contributions•are•most•welcome•as•well,•of•course.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (133 > 79)
+
+doc/USAGE.markdown
+| 186| This•program•is•free•software;•you•can•redistribute•it•and/or•modify•it•under•the•terms•of•the•GNU•General•Public•License•as•published•by•the•Free•Software•Foundation;•either•version•3,•or•(at•your•option)•any•later•version.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (224 > 79)
+
+doc/USAGE.markdown
+| 188| This•program•is•distributed•in•the•hope•that•it•will•be•useful,but•WITHOUT•ANY•WARRANTY;•without•even•the•implied•warranty•of•MERCHANTABILITY•or•FITNESS•FOR•A•PARTICULAR•PURPOSE.••See•the•GNU•General•Public•License•for•more•details.•You•should•have•received•a•copy•of•the•GNU•General•Public•License•along•with•this•program;•if•not,•write•to•the•Free•Software•Foundation,•Inc.,•51•Franklin•Street•-•Fifth•Floor,•Boston,•MA••02110-1301,•USA•
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (439 > 79)
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|   1|    |-# q - Treating Text as a Database 
+|    |   1|+# q - Treating Text as a Database
+|   2|   2| 
+|   3|   3| See below for a JOIN example.
+|   4|   4| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|   3|   3| See below for a JOIN example.
+|   4|   4| 
+|   5|   5| ## Tutorial
+|    |   6|+
+|   6|   7| This is a tutorial for beginners. If you're familiar with the concept and just wanna see some full fledged examples, take a look [here](README.markdown#examples) in the main page.
+|   7|   8| 
+|   8|   9| Tutorial steps:
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|   7|   7| 
+|   8|   8| Tutorial steps:
+|   9|   9| 
+|  10|    |-1.  We'll start with a simple example and work from there. The file `exampledatafile` contains the output of an `ls -l` command, a list of files in some directory. In this example we'll do some calculations on this file list.
+|  11|    |-  * The following commands will count the lines in the file *exampledatafile*, effectively getting the number of files in the directory. The output will be exactly as if we ran the `wc -l` command.  
+|    |  10|+1. We'll start with a simple example and work from there. The file `exampledatafile` contains the output of an `ls -l` command, a list of files in some directory. In this example we'll do some calculations on this file list.
+|    |  11|+2. The following commands will count the lines in the file *exampledatafile*, effectively getting the number of files in the directory. The output will be exactly as if we ran the `wc -l` command.  
+|  12|  12| 
+|  13|    |-            q "SELECT COUNT(1) FROM exampledatafile"    
+|    |  13|+   ```
+|    |  14|+       q "SELECT COUNT(1) FROM exampledatafile"    
+|  14|  15| 
+|  15|    |-            cat exampledatafile | q "SELECT COUNT(1) FROM -"   
+|  16|    |-        
+|  17|    |-  * Now, let's assume we want to know the number of files per date in the directory. Notice that the date is in column 6.
+|    |  16|+       cat exampledatafile | q "SELECT COUNT(1) FROM -"   
+|    |  17|+   ```
+|  18|  18| 
+|  19|    |-            q "SELECT c6,COUNT(1) FROM exampledatafile GROUP BY c6"   
+|    |  19|+3. Now, let's assume we want to know the number of files per date in the directory. Notice that the date is in column 6.
+|  20|  20| 
+|  21|    |-  * The results will show the number of files per date. However, there's a lot of "noise" - dates in which there is only one file. Let's leave only the ones which have 3 files or more:  
+|    |  21|+   ```
+|    |  22|+       q "SELECT c6,COUNT(1) FROM exampledatafile GROUP BY c6"   
+|    |  23|+   ```
+|  22|  24| 
+|  23|    |-            q "SELECT c6,COUNT(1) AS cnt FROM exampledatafile GROUP BY c6 HAVING cnt >= 3"   
+|    |  25|+4. The results will show the number of files per date. However, there's a lot of "noise" - dates in which there is only one file. Let's leave only the ones which have 3 files or more:  
+|  24|  26| 
+|  25|    |-  * Now, let's see if we can get something more interesting. The following command will provide the **total size** of the files for each date. Notice that the file size is in c5.  
+|    |  27|+   ```
+|    |  28|+       q "SELECT c6,COUNT(1) AS cnt FROM exampledatafile GROUP BY c6 HAVING cnt >= 3"   
+|    |  29|+   ```
+|  26|  30| 
+|  27|    |-            q "SELECT c6,SUM(c5) AS size FROM exampledatafile GROUP BY c6"   
+|    |  31|+5. Now, let's see if we can get something more interesting. The following command will provide the **total size** of the files for each date. Notice that the file size is in c5.  
+|  28|  32| 
+|  29|    |-  * We can see the results. However, the sums are in bytes. Let's show the same results but in KB:  
+|    |  33|+   ```
+|    |  34|+       q "SELECT c6,SUM(c5) AS size FROM exampledatafile GROUP BY c6"   
+|    |  35|+   ```
+|  30|  36| 
+|  31|    |-            q "SELECT c6,SUM(c5)/1024.0 AS size FROM exampledatafile GROUP BY c6"  
+|    |  37|+6. We can see the results. However, the sums are in bytes. Let's show the same results but in KB:  
+|  32|  38| 
+|  33|    |-  * The last command provided us with a list of results, but there is no order and the list is too long. Let's get the Top 5 dates:  
+|    |  39|+   ```
+|    |  40|+       q "SELECT c6,SUM(c5)/1024.0 AS size FROM exampledatafile GROUP BY c6"  
+|    |  41|+   ```
+|  34|  42| 
+|  35|    |-            q "SELECT c6,SUM(c5)/1024.0 AS size FROM exampledatafile GROUP BY c6 ORDER BY size DESC LIMIT 5"   
+|    |  43|+7. The last command provided us with a list of results, but there is no order and the list is too long. Let's get the Top 5 dates:  
+|  36|  44| 
+|  37|    |-  * Now we'll see how we can format the output itself, so it looks better:  
+|    |  45|+   ```
+|    |  46|+       q "SELECT c6,SUM(c5)/1024.0 AS size FROM exampledatafile GROUP BY c6 ORDER BY size DESC LIMIT 5"   
+|    |  47|+   ```
+|  38|  48| 
+|  39|    |-            q -f "2=%4.2f" "SELECT c6,SUM(c5)/1024.0 AS size FROM exampledatafile GROUP BY c6 ORDER BY size DESC LIMIT 5"  
+|  40|    |-        
+|  41|    |-  * (An example of using JOIN will be added here - In the mean time just remember you have to use table alias for JOINed "tables")
+|  42|    |-        
+|  43|    |-2. A more complicated example, showing time manipulation. Let's assume that we have a file with a timestamp as its first column. We'll show how it's possible to get the number of rows per full minute:  
+|    |  49|+8. Now we'll see how we can format the output itself, so it looks better:  
+|  44|  50| 
+|  45|    |-        q "SELECT DATETIME(ROUND(c1/60000)*60000/1000,'unixepoch','-05:00') as min, COUNT(1) FROM datafile*.gz GROUP BY min"  
+|  46|    |-        
+|  47|    |-   There are several things to notice here:
+|  48|    |-   
+|  49|    |-   * The timestamp value is in the first column, hence c1.
+|  50|    |-   * The timestamp is assumed to be a unix epoch timestamp, but in ms, and DATETIME accepts seconds, so we need to divide by 1000
+|  51|    |-   * The full-minute rounding is done by dividing by 60000 (ms), rounding and then multiplying by the same amount. Rounding to an hour, for example, would be the same except for having 3600000 instead of 60000.
+|  52|    |-   * We use DATETIME's capability in order to output the time in localtime format. In that case, it's converted to New York time (hence the -5 hours)
+|  53|    |-   * The filename is actually all files matching "datafile*.gz" - Multiple files can be read, and since they have a .gz extension, they are decompressed on the fly.
+|  54|    |-   * **NOTE:** For non-SQL people, the date manipulation may seem odd at first, but this is standard SQL processing for timestamps and it's easy to get used to.
+|    |  51|+   ```
+|    |  52|+       q -f "2=%4.2f" "SELECT c6,SUM(c5)/1024.0 AS size FROM exampledatafile GROUP BY c6 ORDER BY size DESC LIMIT 5"  
+|    |  53|+   ```
+|    |  54|+
+|    |  55|+9. (An example of using JOIN will be added here - In the mean time just remember you have to use table alias for JOINed "tables")
+|    |  56|+       
+|    |  57|+10. A more complicated example, showing time manipulation. Let's assume that we have a file with a timestamp as its first column. We'll show how it's possible to get the number of rows per full minute:  
+|    |  58|+
+|    |  59|+    ```
+|    |  60|+     q "SELECT DATETIME(ROUND(c1/60000)*60000/1000,'unixepoch','-05:00') as min, COUNT(1) FROM datafile*.gz GROUP BY min"  
+|    |  61|+     
+|    |  62|+    ```
+|    |  63|+
+|    |  64|+    There are several things to notice here:
+|    |  65|+
+|    |  66|+    - The timestamp value is in the first column, hence c1.
+|    |  67|+    - The timestamp is assumed to be a unix epoch timestamp, but in ms, and DATETIME accepts seconds, so we need to divide by 1000
+|    |  68|+    - The full-minute rounding is done by dividing by 60000 (ms), rounding and then multiplying by the same amount. Rounding to an hour, for example, would be the same except for having 3600000 instead of 60000.
+|    |  69|+    - We use DATETIME's capability in order to output the time in localtime format. In that case, it's converted to New York time (hence the -5 hours)
+|    |  70|+    - The filename is actually all files matching "datafile\*.gz" - Multiple files can be read, and since they have a .gz extension, they are decompressed on the fly.
+|    |  71|+    - **NOTE:** For non-SQL people, the date manipulation may seem odd at first, but this is standard SQL processing for timestamps and it's easy to get used to.
+|  55|  72| 
+|  56|  73| ## JOIN example
+|  57|  74| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|  55|  55| 
+|  56|  56| ## JOIN example
+|  57|  57| 
+|  58|    |-__Command 1 (Join data from two files):__
+|    |  58|+**Command 1 (Join data from two files):**
+|  59|  59| 
+|  60|    |-The following command _joins_ an ls output (`exampledatafile`) and a file containing rows of **group-name,email**  (`group-emails-example`) and provides a row of **filename,email** for each of the emails of the group. For brevity of output, there is also a filter for a specific filename called `ppp` which is achieved using a WHERE clause.
+|    |  60|+The following command *joins* an ls output (`exampledatafile`) and a file containing rows of **group-name,email**  (`group-emails-example`) and provides a row of **filename,email** for each of the emails of the group. For brevity of output, there is also a filter for a specific filename called `ppp` which is achieved using a WHERE clause.
+|    |  61|+
+|  61|  62| ```bash
+|  62|  63| q "select myfiles.c8,emails.c2 from exampledatafile myfiles join group-emails-example emails on (myfiles.c4 = emails.c1) where myfiles.c8 = 'ppp'"
+|  63|  64| ```
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|  62|  62| q "select myfiles.c8,emails.c2 from exampledatafile myfiles join group-emails-example emails on (myfiles.c4 = emails.c1) where myfiles.c8 = 'ppp'"
+|  63|  63| ```
+|  64|  64| 
+|  65|    |-__Output 1: (rows of filename,email):__
+|    |  65|+**Output 1: (rows of filename,email):**
+|    |  66|+
+|  66|  67| ```bash
+|  67|  68| ppp dip.1@otherdomain.com
+|  68|  69| ppp dip.2@otherdomain.com
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|  71|  71| You can see that the ppp filename appears twice, each time matched to one of the emails of the group `dip` to which it belongs. Take a look at the files [`exampledatafile`](exampledatafile) and [`group-emails-example`](group-emails-example) for the data.
+|  72|  72| 
+|  73|  73| ## Installation
+|    |  74|+
+|  74|  75| Installation instructions can be found [here](../doc/INSTALL.markdown)
+|  75|  76| 
+|  76|  77| ## Contact
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|  74|  74| Installation instructions can be found [here](../doc/INSTALL.markdown)
+|  75|  75| 
+|  76|  76| ## Contact
+|    |  77|+
+|  77|  78| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  78|  79| 
+|  79|  80| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/examples/EXAMPLES.markdown
+|    |++++| /app/examples/EXAMPLES.markdown
+|  77|  77| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  78|  78| 
+|  79|  79| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|  80|    |-
+
+examples/EXAMPLES.markdown
+|   6| This•is•a•tutorial•for•beginners.•If•you're•familiar•with•the•concept•and•just•wanna•see•some•full•fledged•examples,•take•a•look•[here](README.markdown#examples)•in•the•main•page.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (179 > 79)
+
+examples/EXAMPLES.markdown
+|  10| 1.••We'll•start•with•a•simple•example•and•work•from•there.•The•file•`exampledatafile`•contains•the•output•of•an•`ls•-l`•command,•a•list•of•files•in•some•directory.•In•this•example•we'll•do•some•calculations•on•this•file•list.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (225 > 79)
+
+examples/EXAMPLES.markdown
+|  11| ••*•The•following•commands•will•count•the•lines•in•the•file•*exampledatafile*,•effectively•getting•the•number•of•files•in•the•directory.•The•output•will•be•exactly•as•if•we•ran•the•`wc•-l`•command.••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (199 > 79)
+
+examples/EXAMPLES.markdown
+|  17| ••*•Now,•let's•assume•we•want•to•know•the•number•of•files•per•date•in•the•directory.•Notice•that•the•date•is•in•column•6.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (121 > 79)
+
+examples/EXAMPLES.markdown
+|  21| ••*•The•results•will•show•the•number•of•files•per•date.•However,•there's•a•lot•of•"noise"•-•dates•in•which•there•is•only•one•file.•Let's•leave•only•the•ones•which•have•3•files•or•more:••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (186 > 79)
+
+examples/EXAMPLES.markdown
+|  23| ••••••••••••q•"SELECT•c6,COUNT(1)•AS•cnt•FROM•exampledatafile•GROUP•BY•c6•HAVING•cnt•>=•3"•••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (93 > 79)
+
+examples/EXAMPLES.markdown
+|  25| ••*•Now,•let's•see•if•we•can•get•something•more•interesting.•The•following•command•will•provide•the•**total•size**•of•the•files•for•each•date.•Notice•that•the•file•size•is•in•c5.••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (180 > 79)
+
+examples/EXAMPLES.markdown
+|  29| ••*•We•can•see•the•results.•However,•the•sums•are•in•bytes.•Let's•show•the•same•results•but•in•KB:••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (100 > 79)
+
+examples/EXAMPLES.markdown
+|  31| ••••••••••••q•"SELECT•c6,SUM(c5)/1024.0•AS•size•FROM•exampledatafile•GROUP•BY•c6"••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (83 > 79)
+
+examples/EXAMPLES.markdown
+|  33| ••*•The•last•command•provided•us•with•a•list•of•results,•but•there•is•no•order•and•the•list•is•too•long.•Let's•get•the•Top•5•dates:••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (133 > 79)
+
+examples/EXAMPLES.markdown
+|  35| ••••••••••••q•"SELECT•c6,SUM(c5)/1024.0•AS•size•FROM•exampledatafile•GROUP•BY•c6•ORDER•BY•size•DESC•LIMIT•5"•••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (111 > 79)
+
+examples/EXAMPLES.markdown
+|  39| ••••••••••••q•-f•"2=%4.2f"•"SELECT•c6,SUM(c5)/1024.0•AS•size•FROM•exampledatafile•GROUP•BY•c6•ORDER•BY•size•DESC•LIMIT•5"••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (123 > 79)
+
+examples/EXAMPLES.markdown
+|  41| ••*•(An•example•of•using•JOIN•will•be•added•here•-•In•the•mean•time•just•remember•you•have•to•use•table•alias•for•JOINed•"tables")
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (130 > 79)
+
+examples/EXAMPLES.markdown
+|  43| 2.•A•more•complicated•example,•showing•time•manipulation.•Let's•assume•that•we•have•a•file•with•a•timestamp•as•its•first•column.•We'll•show•how•it's•possible•to•get•the•number•of•rows•per•full•minute:••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (202 > 79)
+
+examples/EXAMPLES.markdown
+|  45| ••••••••q•"SELECT•DATETIME(ROUND(c1/60000)*60000/1000,'unixepoch','-05:00')•as•min,•COUNT(1)•FROM•datafile*.gz•GROUP•BY•min"••
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (126 > 79)
+
+examples/EXAMPLES.markdown
+|  50| •••*•The•timestamp•is•assumed•to•be•a•unix•epoch•timestamp,•but•in•ms,•and•DATETIME•accepts•seconds,•so•we•need•to•divide•by•1000
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (129 > 79)
+
+examples/EXAMPLES.markdown
+|  51| •••*•The•full-minute•rounding•is•done•by•dividing•by•60000•(ms),•rounding•and•then•multiplying•by•the•same•amount.•Rounding•to•an•hour,•for•example,•would•be•the•same•except•for•having•3600000•instead•of•60000.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (210 > 79)
+
+examples/EXAMPLES.markdown
+|  52| •••*•We•use•DATETIME's•capability•in•order•to•output•the•time•in•localtime•format.•In•that•case,•it's•converted•to•New•York•time•(hence•the•-5•hours)
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (149 > 79)
+
+examples/EXAMPLES.markdown
+|  53| •••*•The•filename•is•actually•all•files•matching•"datafile*.gz"•-•Multiple•files•can•be•read,•and•since•they•have•a•.gz•extension,•they•are•decompressed•on•the•fly.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (164 > 79)
+
+examples/EXAMPLES.markdown
+|  54| •••*•**NOTE:**•For•non-SQL•people,•the•date•manipulation•may•seem•odd•at•first,•but•this•is•standard•SQL•processing•for•timestamps•and•it's•easy•to•get•used•to.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (160 > 79)
+
+examples/EXAMPLES.markdown
+|  60| The•following•command•_joins_•an•ls•output•(`exampledatafile`)•and•a•file•containing•rows•of•**group-name,email**••(`group-emails-example`)•and•provides•a•row•of•**filename,email**•for•each•of•the•emails•of•the•group.•For•brevity•of•output,•there•is•also•a•filter•for•a•specific•filename•called•`ppp`•which•is•achieved•using•a•WHERE•clause.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (340 > 79)
+
+examples/EXAMPLES.markdown
+|  62| q•"select•myfiles.c8,emails.c2•from•exampledatafile•myfiles•join•group-emails-example•emails•on•(myfiles.c4•=•emails.c1)•where•myfiles.c8•=•'ppp'"
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (146 > 79)
+
+examples/EXAMPLES.markdown
+|  71| You•can•see•that•the•ppp•filename•appears•twice,•each•time•matched•to•one•of•the•emails•of•the•group•`dip`•to•which•it•belongs.•Take•a•look•at•the•files•[`exampledatafile`](exampledatafile)•and•[`group-emails-example`](group-emails-example)•for•the•data.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (254 > 79)
+
+examples/EXAMPLES.markdown
+|  77| Any•feedback/suggestions/complaints•regarding•this•tool•would•be•much•appreciated.•Contributions•are•most•welcome•as•well,•of•course.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (133 > 79)
+
+examples/EXAMPLES.markdown
+|  79| Harel•Ben-Attia,•harelba@gmail.com,•[@harelba](https://twitter.com/harelba)•on•Twitter
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (86 > 79)
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/IMPLEMENTATION.markdown
+|    |++++| /app/doc/IMPLEMENTATION.markdown
+|   1|    |-# q - Treating Text as a Database 
+|    |   1|+# q - Treating Text as a Database
+|   2|   2| 
+|   3|    |-## Implementation 
+|    |   3|+## Implementation
+|   4|   4| 
+|   5|   5| The current implementation is written in Python using an in-memory database, in order to prevent the need for external dependencies. The implementation itself supports SELECT statements, including JOINs (Subqueries are supported only in the WHERE clause for now).
+|   6|   6| 
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/IMPLEMENTATION.markdown
+|    |++++| /app/doc/IMPLEMENTATION.markdown
+|  15|  15| The code includes a test suite runnable through `test/test-all`. If you're planning on sending a pull request, I'd appreciate if you could make sure that it doesn't fail. Additional ideas related to testing are most welcome.
+|  16|  16| 
+|  17|  17| ## Contact
+|    |  18|+
+|  18|  19| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  19|  20| 
+|  20|  21| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|    | [NORMAL] MarkdownBear:
+|    | The text does not comply to the set style.
+|----|    | /app/doc/IMPLEMENTATION.markdown
+|    |++++| /app/doc/IMPLEMENTATION.markdown
+|  18|  18| Any feedback/suggestions/complaints regarding this tool would be much appreciated. Contributions are most welcome as well, of course.
+|  19|  19| 
+|  20|  20| Harel Ben-Attia, harelba@gmail.com, [@harelba](https://twitter.com/harelba) on Twitter
+|  21|    |-
+
+doc/IMPLEMENTATION.markdown
+|   5| The•current•implementation•is•written•in•Python•using•an•in-memory•database,•in•order•to•prevent•the•need•for•external•dependencies.•The•implementation•itself•supports•SELECT•statements,•including•JOINs•(Subqueries•are•supported•only•in•the•WHERE•clause•for•now).
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (263 > 79)
+
+doc/IMPLEMENTATION.markdown
+|   7| Please•note•that•there•is•currently•no•checks•and•bounds•on•data•size•-•It's•up•to•the•user•to•make•sure•things•don't•get•too•big.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (130 > 79)
+
+doc/IMPLEMENTATION.markdown
+|  11| Code•wise,•I'm•planning•for•a•big•refactoring,•and•I•have•added•full•test•suite•in•the•latest•version,•so•it'll•be•easier•to•do•properly.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (137 > 79)
+
+doc/IMPLEMENTATION.markdown
+|  15| The•code•includes•a•test•suite•runnable•through•`test/test-all`.•If•you're•planning•on•sending•a•pull•request,•I'd•appreciate•if•you•could•make•sure•that•it•doesn't•fail.•Additional•ideas•related•to•testing•are•most•welcome.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (224 > 79)
+
+doc/IMPLEMENTATION.markdown
+|  18| Any•feedback/suggestions/complaints•regarding•this•tool•would•be•much•appreciated.•Contributions•are•most•welcome•as•well,•of•course.
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (133 > 79)
+
+doc/IMPLEMENTATION.markdown
+|  20| Harel•Ben-Attia,•harelba@gmail.com,•[@harelba](https://twitter.com/harelba)•on•Twitter
+|    | [NORMAL] LineLengthBear:
+|    | Line is longer than allowed. (86 > 79)
